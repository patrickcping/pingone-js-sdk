/**
 * PingOne Platform API - Credentials
 * The PingOne Platform API covering the PingOne Credentials service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CredentialIssuanceRuleAutomation from './CredentialIssuanceRuleAutomation';
import CredentialIssuanceRuleCredentialType from './CredentialIssuanceRuleCredentialType';
import CredentialIssuanceRuleDigitalWalletApplication from './CredentialIssuanceRuleDigitalWalletApplication';
import CredentialIssuanceRuleFilter from './CredentialIssuanceRuleFilter';
import CredentialIssuanceRuleNotification from './CredentialIssuanceRuleNotification';
import EnumCredentialIssuanceRuleStatus from './EnumCredentialIssuanceRuleStatus';
import LinksHATEOAS from './LinksHATEOAS';
import ObjectEnvironment from './ObjectEnvironment';

/**
 * The CredentialIssuanceRule model module.
 * @module model/CredentialIssuanceRule
 * @version 2023-06-29
 */
class CredentialIssuanceRule {
  /**
   * Constructs a new <code>CredentialIssuanceRule</code>.
   * @alias module:model/CredentialIssuanceRule
   * @param automation {module:model/CredentialIssuanceRuleAutomation} 
   * @param status {module:model/EnumCredentialIssuanceRuleStatus} 
   */
  constructor(automation, status) {
    CredentialIssuanceRule.initialize(this, automation, status);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, automation, status) {
    obj['automation'] = automation;
    obj['status'] = status;
  }

  /**
   * Constructs a <code>CredentialIssuanceRule</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CredentialIssuanceRule} obj Optional instance to populate.
   * @return {module:model/CredentialIssuanceRule} The populated <code>CredentialIssuanceRule</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CredentialIssuanceRule();
      if (data.hasOwnProperty('_links')) {
        obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
      }
      if (data.hasOwnProperty('automation')) {
        obj['automation'] = CredentialIssuanceRuleAutomation.constructFromObject(data['automation']);
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
      }
      if (data.hasOwnProperty('credentialType')) {
        obj['credentialType'] = CredentialIssuanceRuleCredentialType.constructFromObject(data['credentialType']);
      }
      if (data.hasOwnProperty('digitalWalletApplication')) {
        obj['digitalWalletApplication'] = CredentialIssuanceRuleDigitalWalletApplication.constructFromObject(data['digitalWalletApplication']);
      }
      if (data.hasOwnProperty('environment')) {
        obj['environment'] = ObjectEnvironment.constructFromObject(data['environment']);
      }
      if (data.hasOwnProperty('filter')) {
        obj['filter'] = CredentialIssuanceRuleFilter.constructFromObject(data['filter']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('notification')) {
        obj['notification'] = CredentialIssuanceRuleNotification.constructFromObject(data['notification']);
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = EnumCredentialIssuanceRuleStatus.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('updatedAt')) {
        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>CredentialIssuanceRule</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredentialIssuanceRule</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of CredentialIssuanceRule.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // validate the optional field `automation`
    if (data['automation']) {
      // data not null
      CredentialIssuanceRuleAutomation.validateJSON(data['automation']);
    }
    // validate the optional field `credentialType`
    if (data['credentialType']) {
      // data not null
      CredentialIssuanceRuleCredentialType.validateJSON(data['credentialType']);
    }
    // validate the optional field `digitalWalletApplication`
    if (data['digitalWalletApplication']) {
      // data not null
      CredentialIssuanceRuleDigitalWalletApplication.validateJSON(data['digitalWalletApplication']);
    }
    // validate the optional field `environment`
    if (data['environment']) {
      // data not null
      ObjectEnvironment.validateJSON(data['environment']);
    }
    // validate the optional field `filter`
    if (data['filter']) {
      // data not null
      CredentialIssuanceRuleFilter.validateJSON(data['filter']);
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    // validate the optional field `notification`
    if (data['notification']) {
      // data not null
      CredentialIssuanceRuleNotification.validateJSON(data['notification']);
    }
    return true;
  }
}
CredentialIssuanceRule.RequiredProperties = ["automation", "status"];

/**
 * @member {module:model/LinksHATEOAS} _links
 */
CredentialIssuanceRule.prototype['_links'] = undefined;

/**
 * @member {module:model/CredentialIssuanceRuleAutomation} automation
 */
CredentialIssuanceRule.prototype['automation'] = undefined;

/**
 * A string that specifies the date and time the credential issuance rule was created.
 * @member {Date} createdAt
 */
CredentialIssuanceRule.prototype['createdAt'] = undefined;

/**
 * @member {module:model/CredentialIssuanceRuleCredentialType} credentialType
 */
CredentialIssuanceRule.prototype['credentialType'] = undefined;

/**
 * @member {module:model/CredentialIssuanceRuleDigitalWalletApplication} digitalWalletApplication
 */
CredentialIssuanceRule.prototype['digitalWalletApplication'] = undefined;

/**
 * @member {module:model/ObjectEnvironment} environment
 */
CredentialIssuanceRule.prototype['environment'] = undefined;

/**
 * @member {module:model/CredentialIssuanceRuleFilter} filter
 */
CredentialIssuanceRule.prototype['filter'] = undefined;

/**
 * A string that specifies the identifier (UUID) of the credential issuance rule.
 * @member {String} id
 */
CredentialIssuanceRule.prototype['id'] = undefined;

/**
 * @member {module:model/CredentialIssuanceRuleNotification} notification
 */
CredentialIssuanceRule.prototype['notification'] = undefined;

/**
 * @member {module:model/EnumCredentialIssuanceRuleStatus} status
 */
CredentialIssuanceRule.prototype['status'] = undefined;

/**
 * A string that specifies the date and time the credential issuance rule was last updated; can be null.
 * @member {Date} updatedAt
 */
CredentialIssuanceRule.prototype['updatedAt'] = undefined;
export default CredentialIssuanceRule;