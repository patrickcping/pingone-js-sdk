/**
 * PingOne Platform API - Credentials
 * The PingOne Platform API covering the PingOne Credentials service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumCredentialTypeMetaDataFieldsFileSupport from './EnumCredentialTypeMetaDataFieldsFileSupport';
import EnumCredentialTypeMetaDataFieldsType from './EnumCredentialTypeMetaDataFieldsType';

/**
 * The CredentialTypeMetaDataFieldsInner model module.
 * @module model/CredentialTypeMetaDataFieldsInner
 * @version 2023-06-29
 */
class CredentialTypeMetaDataFieldsInner {
    /**
     * Constructs a new <code>CredentialTypeMetaDataFieldsInner</code>.
     * @alias module:model/CredentialTypeMetaDataFieldsInner
     * @param id {String} A string that specifies the identifier of the field.
     * @param isVisible {Boolean} A boolean value that specifies whether the field should be visible to viewers of the credential.
     * @param title {String} A string that specifies the descriptive text when showing the field.
     * @param type {module:model/EnumCredentialTypeMetaDataFieldsType} 
     */
    constructor(id, isVisible, title, type) { 
        
        CredentialTypeMetaDataFieldsInner.initialize(this, id, isVisible, title, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, isVisible, title, type) { 
        obj['id'] = id;
        obj['isVisible'] = isVisible;
        obj['title'] = title;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>CredentialTypeMetaDataFieldsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CredentialTypeMetaDataFieldsInner} obj Optional instance to populate.
     * @return {module:model/CredentialTypeMetaDataFieldsInner} The populated <code>CredentialTypeMetaDataFieldsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CredentialTypeMetaDataFieldsInner();

            if (data.hasOwnProperty('attribute')) {
                obj['attribute'] = ApiClient.convertToType(data['attribute'], 'String');
            }
            if (data.hasOwnProperty('default')) {
                obj['default'] = ApiClient.convertToType(data['default'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('fileSupport')) {
                obj['fileSupport'] = EnumCredentialTypeMetaDataFieldsFileSupport.constructFromObject(data['fileSupport']);
            }
            if (data.hasOwnProperty('isVisible')) {
                obj['isVisible'] = ApiClient.convertToType(data['isVisible'], 'Boolean');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = EnumCredentialTypeMetaDataFieldsType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CredentialTypeMetaDataFieldsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CredentialTypeMetaDataFieldsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CredentialTypeMetaDataFieldsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['attribute'] && !(typeof data['attribute'] === 'string' || data['attribute'] instanceof String)) {
            throw new Error("Expected the field `attribute` to be a primitive type in the JSON string but got " + data['attribute']);
        }
        // ensure the json data is a string
        if (data['default'] && !(typeof data['default'] === 'string' || data['default'] instanceof String)) {
            throw new Error("Expected the field `default` to be a primitive type in the JSON string but got " + data['default']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}

CredentialTypeMetaDataFieldsInner.RequiredProperties = ["id", "isVisible", "title", "type"];

/**
 * A string that specifies the name of the PingOne Directory attribute if field.type is Directory Attribute.
 * @member {String} attribute
 */
CredentialTypeMetaDataFieldsInner.prototype['attribute'] = undefined;

/**
 * Assigns a default field value if a PingOne Expression Language (PEL) expression in the fields.attribute evaluates to no value.
 * @member {String} default
 */
CredentialTypeMetaDataFieldsInner.prototype['default'] = undefined;

/**
 * A string that specifies the identifier of the field.
 * @member {String} id
 */
CredentialTypeMetaDataFieldsInner.prototype['id'] = undefined;

/**
 * @member {module:model/EnumCredentialTypeMetaDataFieldsFileSupport} fileSupport
 */
CredentialTypeMetaDataFieldsInner.prototype['fileSupport'] = undefined;

/**
 * A boolean value that specifies whether the field should be visible to viewers of the credential.
 * @member {Boolean} isVisible
 */
CredentialTypeMetaDataFieldsInner.prototype['isVisible'] = undefined;

/**
 * A string that specifies the descriptive text when showing the field.
 * @member {String} title
 */
CredentialTypeMetaDataFieldsInner.prototype['title'] = undefined;

/**
 * @member {module:model/EnumCredentialTypeMetaDataFieldsType} type
 */
CredentialTypeMetaDataFieldsInner.prototype['type'] = undefined;

/**
 * A string that specifies the text to appear on the credential for a type of Alphanumeric Text.
 * @member {String} value
 */
CredentialTypeMetaDataFieldsInner.prototype['value'] = undefined;






export default CredentialTypeMetaDataFieldsInner;

