/**
 * PingOne Platform API - Credentials
 * The PingOne Platform API covering the PingOne Credentials service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiCredentials);
  }
}(this, function(expect, PingOnePlatformApiCredentials) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProvisionedCredentialClaimReference', function() {
    it('should create an instance of ProvisionedCredentialClaimReference', function() {
      // uncomment below and update the code to test ProvisionedCredentialClaimReference
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be.a(PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property issuer (base name: "issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property subject (base name: "subject")', function() {
      // uncomment below and update the code to test the property subject
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property holder (base name: "holder")', function() {
      // uncomment below and update the code to test the property holder
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property createDate (base name: "createDate")', function() {
      // uncomment below and update the code to test the property createDate
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property dataJson (base name: "dataJson")', function() {
      // uncomment below and update the code to test the property dataJson
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property dataSignature (base name: "dataSignature")', function() {
      // uncomment below and update the code to test the property dataSignature
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property dataHash (base name: "dataHash")', function() {
      // uncomment below and update the code to test the property dataHash
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

    it('should have the property partitionId (base name: "partitionId")', function() {
      // uncomment below and update the code to test the property partitionId
      //var instance = new PingOnePlatformApiCredentials.ProvisionedCredentialClaimReference();
      //expect(instance).to.be();
    });

  });

}));
