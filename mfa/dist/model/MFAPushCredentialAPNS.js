/**
 * PingOne Platform API - PingOne MFA
 * The PingOne Platform API covering the PingOne MFA service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumMFAPushCredentialAttrType from './EnumMFAPushCredentialAttrType';
import MFAPushCredential from './MFAPushCredential';

/**
 * The MFAPushCredentialAPNS model module.
 * @module model/MFAPushCredentialAPNS
 * @version 2023-06-29
 */
class MFAPushCredentialAPNS {
  /**
   * Constructs a new <code>MFAPushCredentialAPNS</code>.
   * @alias module:model/MFAPushCredentialAPNS
   * @implements module:model/MFAPushCredential
   * @param type {module:model/EnumMFAPushCredentialAttrType} 
   * @param key {String} A string that Apple uses as an identifier to identify an authentication key.  Mandatory.
   * @param teamId {String} A string that Apple uses as an identifier to identify teams.
   * @param token {String} A string that Apple uses as the authentication token signing key to securely connect to APNS. This is a p8 file with a private key format.
   */
  constructor(type, key, teamId, token) {
    MFAPushCredential.initialize(this, type);
    MFAPushCredentialAPNS.initialize(this, type, key, teamId, token);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, type, key, teamId, token) {
    obj['type'] = type;
    obj['key'] = key;
    obj['teamId'] = teamId;
    obj['token'] = token;
  }

  /**
   * Constructs a <code>MFAPushCredentialAPNS</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MFAPushCredentialAPNS} obj Optional instance to populate.
   * @return {module:model/MFAPushCredentialAPNS} The populated <code>MFAPushCredentialAPNS</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new MFAPushCredentialAPNS();
      MFAPushCredential.constructFromObject(data, obj);
      if (data.hasOwnProperty('type')) {
        obj['type'] = EnumMFAPushCredentialAttrType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('key')) {
        obj['key'] = ApiClient.convertToType(data['key'], 'String');
      }
      if (data.hasOwnProperty('teamId')) {
        obj['teamId'] = ApiClient.convertToType(data['teamId'], 'String');
      }
      if (data.hasOwnProperty('token')) {
        obj['token'] = ApiClient.convertToType(data['token'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>MFAPushCredentialAPNS</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MFAPushCredentialAPNS</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of MFAPushCredentialAPNS.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
      throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
    }
    // ensure the json data is a string
    if (data['teamId'] && !(typeof data['teamId'] === 'string' || data['teamId'] instanceof String)) {
      throw new Error("Expected the field `teamId` to be a primitive type in the JSON string but got " + data['teamId']);
    }
    // ensure the json data is a string
    if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
      throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
    }
    return true;
  }
}
MFAPushCredentialAPNS.RequiredProperties = ["type", "key", "teamId", "token"];

/**
 * @member {module:model/EnumMFAPushCredentialAttrType} type
 */
MFAPushCredentialAPNS.prototype['type'] = undefined;

/**
 * A string that Apple uses as an identifier to identify an authentication key.  Mandatory.
 * @member {String} key
 */
MFAPushCredentialAPNS.prototype['key'] = undefined;

/**
 * A string that Apple uses as an identifier to identify teams.
 * @member {String} teamId
 */
MFAPushCredentialAPNS.prototype['teamId'] = undefined;

/**
 * A string that Apple uses as the authentication token signing key to securely connect to APNS. This is a p8 file with a private key format.
 * @member {String} token
 */
MFAPushCredentialAPNS.prototype['token'] = undefined;

// Implement MFAPushCredential interface:
/**
 * @member {module:model/EnumMFAPushCredentialAttrType} type
 */
MFAPushCredential.prototype['type'] = undefined;
export default MFAPushCredentialAPNS;