/**
 * PingOne Platform API - PingOne MFA
 * The PingOne Platform API covering the PingOne MFA service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown from './DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown';

/**
 * The DeviceAuthenticationPolicyOfflineDeviceOtpFailure model module.
 * @module model/DeviceAuthenticationPolicyOfflineDeviceOtpFailure
 * @version 2023-06-29
 */
class DeviceAuthenticationPolicyOfflineDeviceOtpFailure {
  /**
   * Constructs a new <code>DeviceAuthenticationPolicyOfflineDeviceOtpFailure</code>.
   * @alias module:model/DeviceAuthenticationPolicyOfflineDeviceOtpFailure
   * @param count {Number} The maximum number of times that the OTP entry can fail for a user, before they are blocked.
   * @param coolDown {module:model/DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown} 
   */
  constructor(count, coolDown) {
    DeviceAuthenticationPolicyOfflineDeviceOtpFailure.initialize(this, count, coolDown);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, count, coolDown) {
    obj['count'] = count;
    obj['coolDown'] = coolDown;
  }

  /**
   * Constructs a <code>DeviceAuthenticationPolicyOfflineDeviceOtpFailure</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/DeviceAuthenticationPolicyOfflineDeviceOtpFailure} obj Optional instance to populate.
   * @return {module:model/DeviceAuthenticationPolicyOfflineDeviceOtpFailure} The populated <code>DeviceAuthenticationPolicyOfflineDeviceOtpFailure</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new DeviceAuthenticationPolicyOfflineDeviceOtpFailure();
      if (data.hasOwnProperty('count')) {
        obj['count'] = ApiClient.convertToType(data['count'], 'Number');
      }
      if (data.hasOwnProperty('coolDown')) {
        obj['coolDown'] = DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown.constructFromObject(data['coolDown']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>DeviceAuthenticationPolicyOfflineDeviceOtpFailure</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceAuthenticationPolicyOfflineDeviceOtpFailure</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of DeviceAuthenticationPolicyOfflineDeviceOtpFailure.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // validate the optional field `coolDown`
    if (data['coolDown']) {
      // data not null
      DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown.validateJSON(data['coolDown']);
    }
    return true;
  }
}
DeviceAuthenticationPolicyOfflineDeviceOtpFailure.RequiredProperties = ["count", "coolDown"];

/**
 * The maximum number of times that the OTP entry can fail for a user, before they are blocked.
 * @member {Number} count
 */
DeviceAuthenticationPolicyOfflineDeviceOtpFailure.prototype['count'] = undefined;

/**
 * @member {module:model/DeviceAuthenticationPolicyOfflineDeviceOtpFailureCoolDown} coolDown
 */
DeviceAuthenticationPolicyOfflineDeviceOtpFailure.prototype['coolDown'] = undefined;
export default DeviceAuthenticationPolicyOfflineDeviceOtpFailure;