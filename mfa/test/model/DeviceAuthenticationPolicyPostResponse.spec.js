/**
 * PingOne Platform API - PingOne MFA
 * The PingOne Platform API covering the PingOne MFA service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiPingOneMfa);
  }
}(this, function(expect, PingOnePlatformApiPingOneMfa) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeviceAuthenticationPolicyPostResponse', function() {
    it('should create an instance of DeviceAuthenticationPolicyPostResponse', function() {
      // uncomment below and update the code to test DeviceAuthenticationPolicyPostResponse
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be.a(PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse);
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property newDeviceNotification (base name: "newDeviceNotification")', function() {
      // uncomment below and update the code to test the property newDeviceNotification
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property authentication (base name: "authentication")', function() {
      // uncomment below and update the code to test the property authentication
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property sms (base name: "sms")', function() {
      // uncomment below and update the code to test the property sms
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property voice (base name: "voice")', function() {
      // uncomment below and update the code to test the property voice
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property fido2 (base name: "fido2")', function() {
      // uncomment below and update the code to test the property fido2
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property mobile (base name: "mobile")', function() {
      // uncomment below and update the code to test the property mobile
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property totp (base name: "totp")', function() {
      // uncomment below and update the code to test the property totp
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property securityKey (base name: "securityKey")', function() {
      // uncomment below and update the code to test the property securityKey
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property platform (base name: "platform")', function() {
      // uncomment below and update the code to test the property platform
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property _default (base name: "default")', function() {
      // uncomment below and update the code to test the property _default
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property forSignOnPolicy (base name: "forSignOnPolicy")', function() {
      // uncomment below and update the code to test the property forSignOnPolicy
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property embedded (base name: "_embedded")', function() {
      // uncomment below and update the code to test the property embedded
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property count (base name: "count")', function() {
      // uncomment below and update the code to test the property count
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

    it('should have the property size (base name: "size")', function() {
      // uncomment below and update the code to test the property size
      //var instance = new PingOnePlatformApiPingOneMfa.DeviceAuthenticationPolicyPostResponse();
      //expect(instance).to.be();
    });

  });

}));
