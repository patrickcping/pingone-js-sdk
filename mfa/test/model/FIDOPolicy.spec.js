/**
 * PingOne Platform API - PingOne MFA
 * The PingOne Platform API covering the PingOne MFA service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiPingOneMfa);
  }
}(this, function(expect, PingOnePlatformApiPingOneMfa) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FIDOPolicy', function() {
    it('should create an instance of FIDOPolicy', function() {
      // uncomment below and update the code to test FIDOPolicy
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be.a(PingOnePlatformApiPingOneMfa.FIDOPolicy);
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property embedded (base name: "_embedded")', function() {
      // uncomment below and update the code to test the property embedded
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property attestationRequirements (base name: "attestationRequirements")', function() {
      // uncomment below and update the code to test the property attestationRequirements
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property allowedAuthenticators (base name: "allowedAuthenticators")', function() {
      // uncomment below and update the code to test the property allowedAuthenticators
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property enforceDuringAuthentication (base name: "enforceDuringAuthentication")', function() {
      // uncomment below and update the code to test the property enforceDuringAuthentication
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property _default (base name: "default")', function() {
      // uncomment below and update the code to test the property _default
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

    it('should have the property residentKeyRequirement (base name: "residentKeyRequirement")', function() {
      // uncomment below and update the code to test the property residentKeyRequirement
      //var instance = new PingOnePlatformApiPingOneMfa.FIDOPolicy();
      //expect(instance).to.be();
    });

  });

}));
