/**
 * PingOne Platform API - Authorize
 * The PingOne Platform API covering the PingOne Authorize service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DecisionEndpointAuthorizationVersion from './DecisionEndpointAuthorizationVersion';
import DecisionEndpointRecentDecisions from './DecisionEndpointRecentDecisions';
import LinksHATEOAS from './LinksHATEOAS';

/**
 * The DecisionEndpoint model module.
 * @module model/DecisionEndpoint
 * @version 2023-06-29
 */
class DecisionEndpoint {
    /**
     * Constructs a new <code>DecisionEndpoint</code>.
     * @alias module:model/DecisionEndpoint
     * @param description {String} A string that specifies the description of the policy decision resource.
     * @param name {String} A string that specifies the policy decision resource name.
     * @param recordRecentRequests {Boolean} A boolean that specifies whether to record a limited history of recent decision requests and responses, which can be queried through a separate API.
     */
    constructor(description, name, recordRecentRequests) { 
        
        DecisionEndpoint.initialize(this, description, name, recordRecentRequests);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, name, recordRecentRequests) { 
        obj['description'] = description;
        obj['name'] = name;
        obj['recordRecentRequests'] = recordRecentRequests;
    }

    /**
     * Constructs a <code>DecisionEndpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DecisionEndpoint} obj Optional instance to populate.
     * @return {module:model/DecisionEndpoint} The populated <code>DecisionEndpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DecisionEndpoint();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('alternateId')) {
                obj['alternateId'] = ApiClient.convertToType(data['alternateId'], 'String');
            }
            if (data.hasOwnProperty('authorizationVersion')) {
                obj['authorizationVersion'] = DecisionEndpointAuthorizationVersion.constructFromObject(data['authorizationVersion']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('owned')) {
                obj['owned'] = ApiClient.convertToType(data['owned'], 'Boolean');
            }
            if (data.hasOwnProperty('policyId')) {
                obj['policyId'] = ApiClient.convertToType(data['policyId'], 'String');
            }
            if (data.hasOwnProperty('provenance')) {
                obj['provenance'] = ApiClient.convertToType(data['provenance'], 'String');
            }
            if (data.hasOwnProperty('recentDecisionsEnabled')) {
                obj['recentDecisionsEnabled'] = ApiClient.convertToType(data['recentDecisionsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('recentDecisions')) {
                obj['recentDecisions'] = DecisionEndpointRecentDecisions.constructFromObject(data['recentDecisions']);
            }
            if (data.hasOwnProperty('recordRecentRequests')) {
                obj['recordRecentRequests'] = ApiClient.convertToType(data['recordRecentRequests'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DecisionEndpoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DecisionEndpoint</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DecisionEndpoint.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['alternateId'] && !(typeof data['alternateId'] === 'string' || data['alternateId'] instanceof String)) {
            throw new Error("Expected the field `alternateId` to be a primitive type in the JSON string but got " + data['alternateId']);
        }
        // validate the optional field `authorizationVersion`
        if (data['authorizationVersion']) { // data not null
          DecisionEndpointAuthorizationVersion.validateJSON(data['authorizationVersion']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['policyId'] && !(typeof data['policyId'] === 'string' || data['policyId'] instanceof String)) {
            throw new Error("Expected the field `policyId` to be a primitive type in the JSON string but got " + data['policyId']);
        }
        // ensure the json data is a string
        if (data['provenance'] && !(typeof data['provenance'] === 'string' || data['provenance'] instanceof String)) {
            throw new Error("Expected the field `provenance` to be a primitive type in the JSON string but got " + data['provenance']);
        }
        // validate the optional field `recentDecisions`
        if (data['recentDecisions']) { // data not null
          DecisionEndpointRecentDecisions.validateJSON(data['recentDecisions']);
        }

        return true;
    }


}

DecisionEndpoint.RequiredProperties = ["description", "name", "recordRecentRequests"];

/**
 * @member {module:model/LinksHATEOAS} _links
 */
DecisionEndpoint.prototype['_links'] = undefined;

/**
 * A string that specifies alternative unique identifier for the endpoint, which provides a method for locating the resource by a known, fixed identifier.
 * @member {String} alternateId
 */
DecisionEndpoint.prototype['alternateId'] = undefined;

/**
 * @member {module:model/DecisionEndpointAuthorizationVersion} authorizationVersion
 */
DecisionEndpoint.prototype['authorizationVersion'] = undefined;

/**
 * A string that specifies the description of the policy decision resource.
 * @member {String} description
 */
DecisionEndpoint.prototype['description'] = undefined;

/**
 * A string that specifies the resourceâ€™s unique identifier.
 * @member {String} id
 */
DecisionEndpoint.prototype['id'] = undefined;

/**
 * A string that specifies the policy decision resource name.
 * @member {String} name
 */
DecisionEndpoint.prototype['name'] = undefined;

/**
 * A boolean that when true restricts modifications of the endpoint to PingOne-owned clients.
 * @member {Boolean} owned
 */
DecisionEndpoint.prototype['owned'] = undefined;

/**
 * A string that specifies the ID of the root policy configured for this endpoint. If omitted, the policy editor service decides on a suitable default.
 * @member {String} policyId
 */
DecisionEndpoint.prototype['policyId'] = undefined;

/**
 * A string that specifies a machine-readable identifier indicating the provenance of the current configuration. It has no meaning to the Policy Decision Service itself but exists to support integration with other services.
 * @member {String} provenance
 */
DecisionEndpoint.prototype['provenance'] = undefined;

/**
 * A boolean that specifies whether to show recent decisions.
 * @member {Boolean} recentDecisionsEnabled
 */
DecisionEndpoint.prototype['recentDecisionsEnabled'] = undefined;

/**
 * @member {module:model/DecisionEndpointRecentDecisions} recentDecisions
 */
DecisionEndpoint.prototype['recentDecisions'] = undefined;

/**
 * A boolean that specifies whether to record a limited history of recent decision requests and responses, which can be queried through a separate API.
 * @member {Boolean} recordRecentRequests
 */
DecisionEndpoint.prototype['recordRecentRequests'] = undefined;






export default DecisionEndpoint;

