/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiSsoAndBase);
  }
}(this, function(expect, PingOnePlatformApiSsoAndBase) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiSsoAndBase.License();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('License', function() {
    it('should create an instance of License', function() {
      // uncomment below and update the code to test License
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be.a(PingOnePlatformApiSsoAndBase.License);
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property advancedServices (base name: "advancedServices")', function() {
      // uncomment below and update the code to test the property advancedServices
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property assignedEnvironmentsCount (base name: "assignedEnvironmentsCount")', function() {
      // uncomment below and update the code to test the property assignedEnvironmentsCount
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property authorize (base name: "authorize")', function() {
      // uncomment below and update the code to test the property authorize
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property beginsAt (base name: "beginsAt")', function() {
      // uncomment below and update the code to test the property beginsAt
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property credentials (base name: "credentials")', function() {
      // uncomment below and update the code to test the property credentials
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property environments (base name: "environments")', function() {
      // uncomment below and update the code to test the property environments
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property expiresAt (base name: "expiresAt")', function() {
      // uncomment below and update the code to test the property expiresAt
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property fraud (base name: "fraud")', function() {
      // uncomment below and update the code to test the property fraud
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property gateways (base name: "gateways")', function() {
      // uncomment below and update the code to test the property gateways
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property intelligence (base name: "intelligence")', function() {
      // uncomment below and update the code to test the property intelligence
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property mfa (base name: "mfa")', function() {
      // uncomment below and update the code to test the property mfa
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property orchestrate (base name: "orchestrate")', function() {
      // uncomment below and update the code to test the property orchestrate
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property organization (base name: "organization")', function() {
      // uncomment below and update the code to test the property organization
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property _package (base name: "package")', function() {
      // uncomment below and update the code to test the property _package
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property replacesLicense (base name: "replacesLicense")', function() {
      // uncomment below and update the code to test the property replacesLicense
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property replacedByLicense (base name: "replacedByLicense")', function() {
      // uncomment below and update the code to test the property replacedByLicense
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property terminatesAt (base name: "terminatesAt")', function() {
      // uncomment below and update the code to test the property terminatesAt
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property users (base name: "users")', function() {
      // uncomment below and update the code to test the property users
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

    it('should have the property verify (base name: "verify")', function() {
      // uncomment below and update the code to test the property verify
      //var instance = new PingOnePlatformApiSsoAndBase.License();
      //expect(instance).to.be();
    });

  });

}));
