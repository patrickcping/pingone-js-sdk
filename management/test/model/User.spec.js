/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiSsoAndBase);
  }
}(this, function(expect, PingOnePlatformApiSsoAndBase) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiSsoAndBase.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be.a(PingOnePlatformApiSsoAndBase.User);
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property account (base name: "account")', function() {
      // uncomment below and update the code to test the property account
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property emailVerified (base name: "emailVerified")', function() {
      // uncomment below and update the code to test the property emailVerified
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "externalId")', function() {
      // uncomment below and update the code to test the property externalId
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property identityProvider (base name: "identityProvider")', function() {
      // uncomment below and update the code to test the property identityProvider
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property lastSignOn (base name: "lastSignOn")', function() {
      // uncomment below and update the code to test the property lastSignOn
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property lifecycle (base name: "lifecycle")', function() {
      // uncomment below and update the code to test the property lifecycle
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property memberOfGroupIDs (base name: "memberOfGroupIDs")', function() {
      // uncomment below and update the code to test the property memberOfGroupIDs
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property memberOfGroupNames (base name: "memberOfGroupNames")', function() {
      // uncomment below and update the code to test the property memberOfGroupNames
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property mfaEnabled (base name: "mfaEnabled")', function() {
      // uncomment below and update the code to test the property mfaEnabled
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property mobilePhone (base name: "mobilePhone")', function() {
      // uncomment below and update the code to test the property mobilePhone
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property nickname (base name: "nickname")', function() {
      // uncomment below and update the code to test the property nickname
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property photo (base name: "photo")', function() {
      // uncomment below and update the code to test the property photo
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property population (base name: "population")', function() {
      // uncomment below and update the code to test the property population
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property preferredLanguage (base name: "preferredLanguage")', function() {
      // uncomment below and update the code to test the property preferredLanguage
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property primaryPhone (base name: "primaryPhone")', function() {
      // uncomment below and update the code to test the property primaryPhone
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property timezone (base name: "timezone")', function() {
      // uncomment below and update the code to test the property timezone
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property username (base name: "username")', function() {
      // uncomment below and update the code to test the property username
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

    it('should have the property verifyStatus (base name: "verifyStatus")', function() {
      // uncomment below and update the code to test the property verifyStatus
      //var instance = new PingOnePlatformApiSsoAndBase.User();
      //expect(instance).to.be();
    });

  });

}));
