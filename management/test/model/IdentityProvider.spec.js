/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiSsoAndBase);
  }
}(this, function(expect, PingOnePlatformApiSsoAndBase) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IdentityProvider', function() {
    it('should create an instance of IdentityProvider', function() {
      // uncomment below and update the code to test IdentityProvider
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be.a(PingOnePlatformApiSsoAndBase.IdentityProvider);
    });

    it('should have the property links (base name: "_links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property environment (base name: "environment")', function() {
      // uncomment below and update the code to test the property environment
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property icon (base name: "icon")', function() {
      // uncomment below and update the code to test the property icon
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property loginButtonIcon (base name: "loginButtonIcon")', function() {
      // uncomment below and update the code to test the property loginButtonIcon
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property registration (base name: "registration")', function() {
      // uncomment below and update the code to test the property registration
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "createdAt")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property updatedAt (base name: "updatedAt")', function() {
      // uncomment below and update the code to test the property updatedAt
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property appSecret (base name: "appSecret")', function() {
      // uncomment below and update the code to test the property appSecret
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property clientSecret (base name: "clientSecret")', function() {
      // uncomment below and update the code to test the property clientSecret
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property authorizationEndpoint (base name: "authorizationEndpoint")', function() {
      // uncomment below and update the code to test the property authorizationEndpoint
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property discoveryEndpoint (base name: "discoveryEndpoint")', function() {
      // uncomment below and update the code to test the property discoveryEndpoint
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property issuer (base name: "issuer")', function() {
      // uncomment below and update the code to test the property issuer
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property jwksEndpoint (base name: "jwksEndpoint")', function() {
      // uncomment below and update the code to test the property jwksEndpoint
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property scopes (base name: "scopes")', function() {
      // uncomment below and update the code to test the property scopes
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpoint (base name: "tokenEndpoint")', function() {
      // uncomment below and update the code to test the property tokenEndpoint
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property tokenEndpointAuthMethod (base name: "tokenEndpointAuthMethod")', function() {
      // uncomment below and update the code to test the property tokenEndpointAuthMethod
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property userInfoEndpoint (base name: "userInfoEndpoint")', function() {
      // uncomment below and update the code to test the property userInfoEndpoint
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property pkceMethod (base name: "pkceMethod")', function() {
      // uncomment below and update the code to test the property pkceMethod
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property clientSecretSigningKey (base name: "clientSecretSigningKey")', function() {
      // uncomment below and update the code to test the property clientSecretSigningKey
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property keyId (base name: "keyId")', function() {
      // uncomment below and update the code to test the property keyId
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property teamId (base name: "teamId")', function() {
      // uncomment below and update the code to test the property teamId
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property clientEnvironment (base name: "clientEnvironment")', function() {
      // uncomment below and update the code to test the property clientEnvironment
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property authnRequestSigned (base name: "authnRequestSigned")', function() {
      // uncomment below and update the code to test the property authnRequestSigned
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property idpEntityId (base name: "idpEntityId")', function() {
      // uncomment below and update the code to test the property idpEntityId
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property idpVerification (base name: "idpVerification")', function() {
      // uncomment below and update the code to test the property idpVerification
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property spEntityId (base name: "spEntityId")', function() {
      // uncomment below and update the code to test the property spEntityId
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property spSigning (base name: "spSigning")', function() {
      // uncomment below and update the code to test the property spSigning
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property ssoBinding (base name: "ssoBinding")', function() {
      // uncomment below and update the code to test the property ssoBinding
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property ssoEndpoint (base name: "ssoEndpoint")', function() {
      // uncomment below and update the code to test the property ssoEndpoint
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property sloBinding (base name: "sloBinding")', function() {
      // uncomment below and update the code to test the property sloBinding
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property sloEndpoint (base name: "sloEndpoint")', function() {
      // uncomment below and update the code to test the property sloEndpoint
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property sloResponseEndpoint (base name: "sloResponseEndpoint")', function() {
      // uncomment below and update the code to test the property sloResponseEndpoint
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

    it('should have the property sloWindow (base name: "sloWindow")', function() {
      // uncomment below and update the code to test the property sloWindow
      //var instance = new PingOnePlatformApiSsoAndBase.IdentityProvider();
      //expect(instance).to.be();
    });

  });

}));
