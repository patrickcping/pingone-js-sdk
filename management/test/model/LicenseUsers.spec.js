/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiSsoAndBase);
  }
}(this, function(expect, PingOnePlatformApiSsoAndBase) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LicenseUsers', function() {
    it('should create an instance of LicenseUsers', function() {
      // uncomment below and update the code to test LicenseUsers
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be.a(PingOnePlatformApiSsoAndBase.LicenseUsers);
    });

    it('should have the property allowPasswordManagementNotifications (base name: "allowPasswordManagementNotifications")', function() {
      // uncomment below and update the code to test the property allowPasswordManagementNotifications
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowIdentityProviders (base name: "allowIdentityProviders")', function() {
      // uncomment below and update the code to test the property allowIdentityProviders
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowMyAccount (base name: "allowMyAccount")', function() {
      // uncomment below and update the code to test the property allowMyAccount
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowPasswordManagement (base name: "allowPasswordManagement")', function() {
      // uncomment below and update the code to test the property allowPasswordManagement
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowPasswordOnlyAuthentication (base name: "allowPasswordOnlyAuthentication")', function() {
      // uncomment below and update the code to test the property allowPasswordOnlyAuthentication
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowPasswordPolicy (base name: "allowPasswordPolicy")', function() {
      // uncomment below and update the code to test the property allowPasswordPolicy
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowProvisioning (base name: "allowProvisioning")', function() {
      // uncomment below and update the code to test the property allowProvisioning
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowInboundProvisioning (base name: "allowInboundProvisioning")', function() {
      // uncomment below and update the code to test the property allowInboundProvisioning
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowRoleAssignment (base name: "allowRoleAssignment")', function() {
      // uncomment below and update the code to test the property allowRoleAssignment
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowVerificationFlow (base name: "allowVerificationFlow")', function() {
      // uncomment below and update the code to test the property allowVerificationFlow
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property allowUpdateSelf (base name: "allowUpdateSelf")', function() {
      // uncomment below and update the code to test the property allowUpdateSelf
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property entitledToSupport (base name: "entitledToSupport")', function() {
      // uncomment below and update the code to test the property entitledToSupport
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property max (base name: "max")', function() {
      // uncomment below and update the code to test the property max
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property hardLimitMax (base name: "hardLimitMax")', function() {
      // uncomment below and update the code to test the property hardLimitMax
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property annualActiveIncluded (base name: "annualActiveIncluded")', function() {
      // uncomment below and update the code to test the property annualActiveIncluded
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

    it('should have the property monthlyActiveIncluded (base name: "monthlyActiveIncluded")', function() {
      // uncomment below and update the code to test the property monthlyActiveIncluded
      //var instance = new PingOnePlatformApiSsoAndBase.LicenseUsers();
      //expect(instance).to.be();
    });

  });

}));
