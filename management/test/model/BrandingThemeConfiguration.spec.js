/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiSsoAndBase);
  }
}(this, function(expect, PingOnePlatformApiSsoAndBase) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BrandingThemeConfiguration', function() {
    it('should create an instance of BrandingThemeConfiguration', function() {
      // uncomment below and update the code to test BrandingThemeConfiguration
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be.a(PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration);
    });

    it('should have the property backgroundColor (base name: "backgroundColor")', function() {
      // uncomment below and update the code to test the property backgroundColor
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property backgroundType (base name: "backgroundType")', function() {
      // uncomment below and update the code to test the property backgroundType
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property backgroundImage (base name: "backgroundImage")', function() {
      // uncomment below and update the code to test the property backgroundImage
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property bodyTextColor (base name: "bodyTextColor")', function() {
      // uncomment below and update the code to test the property bodyTextColor
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property buttonColor (base name: "buttonColor")', function() {
      // uncomment below and update the code to test the property buttonColor
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property buttonTextColor (base name: "buttonTextColor")', function() {
      // uncomment below and update the code to test the property buttonTextColor
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property cardColor (base name: "cardColor")', function() {
      // uncomment below and update the code to test the property cardColor
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property footer (base name: "footer")', function() {
      // uncomment below and update the code to test the property footer
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property headingTextColor (base name: "headingTextColor")', function() {
      // uncomment below and update the code to test the property headingTextColor
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property linkTextColor (base name: "linkTextColor")', function() {
      // uncomment below and update the code to test the property linkTextColor
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property logoType (base name: "logoType")', function() {
      // uncomment below and update the code to test the property logoType
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new PingOnePlatformApiSsoAndBase.BrandingThemeConfiguration();
      //expect(instance).to.be();
    });

  });

}));
