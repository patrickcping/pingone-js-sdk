/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PingOnePlatformApiSsoAndBase);
  }
}(this, function(expect, PingOnePlatformApiSsoAndBase) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EntityArrayEmbedded', function() {
    it('should create an instance of EntityArrayEmbedded', function() {
      // uncomment below and update the code to test EntityArrayEmbedded
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be.a(PingOnePlatformApiSsoAndBase.EntityArrayEmbedded);
    });

    it('should have the property actions (base name: "actions")', function() {
      // uncomment below and update the code to test the property actions
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property agreements (base name: "agreements")', function() {
      // uncomment below and update the code to test the property agreements
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property alertChannels (base name: "alertChannels")', function() {
      // uncomment below and update the code to test the property alertChannels
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property applications (base name: "applications")', function() {
      // uncomment below and update the code to test the property applications
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property certificates (base name: "certificates")', function() {
      // uncomment below and update the code to test the property certificates
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property contents (base name: "contents")', function() {
      // uncomment below and update the code to test the property contents
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property credentials (base name: "credentials")', function() {
      // uncomment below and update the code to test the property credentials
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property customDomains (base name: "customDomains")', function() {
      // uncomment below and update the code to test the property customDomains
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property emailDomains (base name: "emailDomains")', function() {
      // uncomment below and update the code to test the property emailDomains
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property environments (base name: "environments")', function() {
      // uncomment below and update the code to test the property environments
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property flowPolicies (base name: "flowPolicies")', function() {
      // uncomment below and update the code to test the property flowPolicies
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property flowPolicyAssignments (base name: "flowPolicyAssignments")', function() {
      // uncomment below and update the code to test the property flowPolicyAssignments
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property forms (base name: "forms")', function() {
      // uncomment below and update the code to test the property forms
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property gatewayInstances (base name: "gatewayInstances")', function() {
      // uncomment below and update the code to test the property gatewayInstances
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property gateways (base name: "gateways")', function() {
      // uncomment below and update the code to test the property gateways
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property grants (base name: "grants")', function() {
      // uncomment below and update the code to test the property grants
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property groups (base name: "groups")', function() {
      // uncomment below and update the code to test the property groups
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property groupMemberships (base name: "groupMemberships")', function() {
      // uncomment below and update the code to test the property groupMemberships
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property identityProviders (base name: "identityProviders")', function() {
      // uncomment below and update the code to test the property identityProviders
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property keys (base name: "keys")', function() {
      // uncomment below and update the code to test the property keys
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property keyRotationPolicies (base name: "keyRotationPolicies")', function() {
      // uncomment below and update the code to test the property keyRotationPolicies
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property languages (base name: "languages")', function() {
      // uncomment below and update the code to test the property languages
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property licenses (base name: "licenses")', function() {
      // uncomment below and update the code to test the property licenses
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property notificationsPolicies (base name: "notificationsPolicies")', function() {
      // uncomment below and update the code to test the property notificationsPolicies
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property organizations (base name: "organizations")', function() {
      // uncomment below and update the code to test the property organizations
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property passwordPolicies (base name: "passwordPolicies")', function() {
      // uncomment below and update the code to test the property passwordPolicies
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property phoneDeliverySettings (base name: "phoneDeliverySettings")', function() {
      // uncomment below and update the code to test the property phoneDeliverySettings
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property plans (base name: "plans")', function() {
      // uncomment below and update the code to test the property plans
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property populations (base name: "populations")', function() {
      // uncomment below and update the code to test the property populations
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property resources (base name: "resources")', function() {
      // uncomment below and update the code to test the property resources
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property revisions (base name: "revisions")', function() {
      // uncomment below and update the code to test the property revisions
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property scopes (base name: "scopes")', function() {
      // uncomment below and update the code to test the property scopes
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property signOnPolicies (base name: "signOnPolicies")', function() {
      // uncomment below and update the code to test the property signOnPolicies
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property signOnPolicyAssignments (base name: "signOnPolicyAssignments")', function() {
      // uncomment below and update the code to test the property signOnPolicyAssignments
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property subscriptions (base name: "subscriptions")', function() {
      // uncomment below and update the code to test the property subscriptions
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property templates (base name: "templates")', function() {
      // uncomment below and update the code to test the property templates
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property themes (base name: "themes")', function() {
      // uncomment below and update the code to test the property themes
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property trustedEmails (base name: "trustedEmails")', function() {
      // uncomment below and update the code to test the property trustedEmails
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property roleAssignments (base name: "roleAssignments")', function() {
      // uncomment below and update the code to test the property roleAssignments
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property roles (base name: "roles")', function() {
      // uncomment below and update the code to test the property roles
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property schemas (base name: "schemas")', function() {
      // uncomment below and update the code to test the property schemas
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

    it('should have the property users (base name: "users")', function() {
      // uncomment below and update the code to test the property users
      //var instance = new PingOnePlatformApiSsoAndBase.EntityArrayEmbedded();
      //expect(instance).to.be();
    });

  });

}));
