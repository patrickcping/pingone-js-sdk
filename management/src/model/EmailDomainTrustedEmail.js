/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EmailDomainTrustedEmailDomain from './EmailDomainTrustedEmailDomain';
import EnumTrustedEmailStatus from './EnumTrustedEmailStatus';
import ObjectEnvironment from './ObjectEnvironment';

/**
 * The EmailDomainTrustedEmail model module.
 * @module model/EmailDomainTrustedEmail
 * @version 2023-06-29
 */
class EmailDomainTrustedEmail {
    /**
     * Constructs a new <code>EmailDomainTrustedEmail</code>.
     * @alias module:model/EmailDomainTrustedEmail
     * @param emailAddress {String} A string that specifies the trusted email address, for example john.smith@shopco.com.
     */
    constructor(emailAddress) { 
        
        EmailDomainTrustedEmail.initialize(this, emailAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, emailAddress) { 
        obj['emailAddress'] = emailAddress;
    }

    /**
     * Constructs a <code>EmailDomainTrustedEmail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EmailDomainTrustedEmail} obj Optional instance to populate.
     * @return {module:model/EmailDomainTrustedEmail} The populated <code>EmailDomainTrustedEmail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EmailDomainTrustedEmail();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ObjectEnvironment.constructFromObject(data['environment']);
            }
            if (data.hasOwnProperty('domain')) {
                obj['domain'] = EmailDomainTrustedEmailDomain.constructFromObject(data['domain']);
            }
            if (data.hasOwnProperty('emailAddress')) {
                obj['emailAddress'] = ApiClient.convertToType(data['emailAddress'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EnumTrustedEmailStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('domainId')) {
                obj['domainId'] = ApiClient.convertToType(data['domainId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EmailDomainTrustedEmail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EmailDomainTrustedEmail</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EmailDomainTrustedEmail.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `environment`
        if (data['environment']) { // data not null
          ObjectEnvironment.validateJSON(data['environment']);
        }
        // validate the optional field `domain`
        if (data['domain']) { // data not null
          EmailDomainTrustedEmailDomain.validateJSON(data['domain']);
        }
        // ensure the json data is a string
        if (data['emailAddress'] && !(typeof data['emailAddress'] === 'string' || data['emailAddress'] instanceof String)) {
            throw new Error("Expected the field `emailAddress` to be a primitive type in the JSON string but got " + data['emailAddress']);
        }
        // ensure the json data is a string
        if (data['domainId'] && !(typeof data['domainId'] === 'string' || data['domainId'] instanceof String)) {
            throw new Error("Expected the field `domainId` to be a primitive type in the JSON string but got " + data['domainId']);
        }

        return true;
    }


}

EmailDomainTrustedEmail.RequiredProperties = ["emailAddress"];

/**
 * A string that specifies the auto generated ID of the trusted email address.
 * @member {String} id
 */
EmailDomainTrustedEmail.prototype['id'] = undefined;

/**
 * @member {module:model/ObjectEnvironment} environment
 */
EmailDomainTrustedEmail.prototype['environment'] = undefined;

/**
 * @member {module:model/EmailDomainTrustedEmailDomain} domain
 */
EmailDomainTrustedEmail.prototype['domain'] = undefined;

/**
 * A string that specifies the trusted email address, for example john.smith@shopco.com.
 * @member {String} emailAddress
 */
EmailDomainTrustedEmail.prototype['emailAddress'] = undefined;

/**
 * @member {module:model/EnumTrustedEmailStatus} status
 */
EmailDomainTrustedEmail.prototype['status'] = undefined;

/**
 * A string that specifies the trusted email domain resourceâ€™s unique identifier associated with the resource.
 * @member {String} domainId
 */
EmailDomainTrustedEmail.prototype['domainId'] = undefined;






export default EmailDomainTrustedEmail;

