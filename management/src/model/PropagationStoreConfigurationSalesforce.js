/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PropagationStoreConfigurationSalesforce model module.
 * @module model/PropagationStoreConfigurationSalesforce
 * @version 2023-06-29
 */
class PropagationStoreConfigurationSalesforce {
    /**
     * Constructs a new <code>PropagationStoreConfigurationSalesforce</code>.
     * @alias module:model/PropagationStoreConfigurationSalesforce
     * @param CLIENT_ID {String} The Salesforce client ID.
     * @param CLIENT_SECRET {String} The Salesforce client secret.
     * @param ENABLE_COMMUNITIES {Boolean} Whether or not to enable Salesforce communities.
     * @param FREEZE_USER_FLAG {Boolean} Whether the user account is frozen.
     * @param OAUTH_ACCESS_TOKEN {String} OAuth access token for account authentication.
     * @param OAUTH_REFRESH_TOKEN {String} OAuth refresh token for account authentication.
     * @param PERMISSION_SET_MANAGEMENT {String} The permission sets to be merged with Salesforce.
     * @param SALESFORCE_DOMAIN {String} The account's salesforce.com domain.
     */
    constructor(CLIENT_ID, CLIENT_SECRET, ENABLE_COMMUNITIES, FREEZE_USER_FLAG, OAUTH_ACCESS_TOKEN, OAUTH_REFRESH_TOKEN, PERMISSION_SET_MANAGEMENT, SALESFORCE_DOMAIN) { 
        
        PropagationStoreConfigurationSalesforce.initialize(this, CLIENT_ID, CLIENT_SECRET, ENABLE_COMMUNITIES, FREEZE_USER_FLAG, OAUTH_ACCESS_TOKEN, OAUTH_REFRESH_TOKEN, PERMISSION_SET_MANAGEMENT, SALESFORCE_DOMAIN);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, CLIENT_ID, CLIENT_SECRET, ENABLE_COMMUNITIES, FREEZE_USER_FLAG, OAUTH_ACCESS_TOKEN, OAUTH_REFRESH_TOKEN, PERMISSION_SET_MANAGEMENT, SALESFORCE_DOMAIN) { 
        obj['CLIENT_ID'] = CLIENT_ID;
        obj['CLIENT_SECRET'] = CLIENT_SECRET;
        obj['ENABLE_COMMUNITIES'] = ENABLE_COMMUNITIES;
        obj['FREEZE_USER_FLAG'] = FREEZE_USER_FLAG;
        obj['OAUTH_ACCESS_TOKEN'] = OAUTH_ACCESS_TOKEN;
        obj['OAUTH_REFRESH_TOKEN'] = OAUTH_REFRESH_TOKEN;
        obj['PERMISSION_SET_MANAGEMENT'] = PERMISSION_SET_MANAGEMENT;
        obj['SALESFORCE_DOMAIN'] = SALESFORCE_DOMAIN;
    }

    /**
     * Constructs a <code>PropagationStoreConfigurationSalesforce</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PropagationStoreConfigurationSalesforce} obj Optional instance to populate.
     * @return {module:model/PropagationStoreConfigurationSalesforce} The populated <code>PropagationStoreConfigurationSalesforce</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PropagationStoreConfigurationSalesforce();

            if (data.hasOwnProperty('ACCOUNT_ID')) {
                obj['ACCOUNT_ID'] = ApiClient.convertToType(data['ACCOUNT_ID'], 'String');
            }
            if (data.hasOwnProperty('CLIENT_ID')) {
                obj['CLIENT_ID'] = ApiClient.convertToType(data['CLIENT_ID'], 'String');
            }
            if (data.hasOwnProperty('CLIENT_SECRET')) {
                obj['CLIENT_SECRET'] = ApiClient.convertToType(data['CLIENT_SECRET'], 'String');
            }
            if (data.hasOwnProperty('CREATE_USERS')) {
                obj['CREATE_USERS'] = ApiClient.convertToType(data['CREATE_USERS'], 'Boolean');
            }
            if (data.hasOwnProperty('DISABLE_USERS')) {
                obj['DISABLE_USERS'] = ApiClient.convertToType(data['DISABLE_USERS'], 'Boolean');
            }
            if (data.hasOwnProperty('ENABLE_COMMUNITIES')) {
                obj['ENABLE_COMMUNITIES'] = ApiClient.convertToType(data['ENABLE_COMMUNITIES'], 'Boolean');
            }
            if (data.hasOwnProperty('FREEZE_USER_FLAG')) {
                obj['FREEZE_USER_FLAG'] = ApiClient.convertToType(data['FREEZE_USER_FLAG'], 'Boolean');
            }
            if (data.hasOwnProperty('OAUTH_ACCESS_TOKEN')) {
                obj['OAUTH_ACCESS_TOKEN'] = ApiClient.convertToType(data['OAUTH_ACCESS_TOKEN'], 'String');
            }
            if (data.hasOwnProperty('OAUTH_REFRESH_TOKEN')) {
                obj['OAUTH_REFRESH_TOKEN'] = ApiClient.convertToType(data['OAUTH_REFRESH_TOKEN'], 'String');
            }
            if (data.hasOwnProperty('PERMISSION_SET_MANAGEMENT')) {
                obj['PERMISSION_SET_MANAGEMENT'] = ApiClient.convertToType(data['PERMISSION_SET_MANAGEMENT'], 'String');
            }
            if (data.hasOwnProperty('PROFILE_ID')) {
                obj['PROFILE_ID'] = ApiClient.convertToType(data['PROFILE_ID'], 'String');
            }
            if (data.hasOwnProperty('PROVISION_DISABLED_USERS')) {
                obj['PROVISION_DISABLED_USERS'] = ApiClient.convertToType(data['PROVISION_DISABLED_USERS'], 'Boolean');
            }
            if (data.hasOwnProperty('SALESFORCE_DOMAIN')) {
                obj['SALESFORCE_DOMAIN'] = ApiClient.convertToType(data['SALESFORCE_DOMAIN'], 'String');
            }
            if (data.hasOwnProperty('UPDATE_USERS')) {
                obj['UPDATE_USERS'] = ApiClient.convertToType(data['UPDATE_USERS'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PropagationStoreConfigurationSalesforce</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PropagationStoreConfigurationSalesforce</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PropagationStoreConfigurationSalesforce.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['ACCOUNT_ID'] && !(typeof data['ACCOUNT_ID'] === 'string' || data['ACCOUNT_ID'] instanceof String)) {
            throw new Error("Expected the field `ACCOUNT_ID` to be a primitive type in the JSON string but got " + data['ACCOUNT_ID']);
        }
        // ensure the json data is a string
        if (data['CLIENT_ID'] && !(typeof data['CLIENT_ID'] === 'string' || data['CLIENT_ID'] instanceof String)) {
            throw new Error("Expected the field `CLIENT_ID` to be a primitive type in the JSON string but got " + data['CLIENT_ID']);
        }
        // ensure the json data is a string
        if (data['CLIENT_SECRET'] && !(typeof data['CLIENT_SECRET'] === 'string' || data['CLIENT_SECRET'] instanceof String)) {
            throw new Error("Expected the field `CLIENT_SECRET` to be a primitive type in the JSON string but got " + data['CLIENT_SECRET']);
        }
        // ensure the json data is a string
        if (data['OAUTH_ACCESS_TOKEN'] && !(typeof data['OAUTH_ACCESS_TOKEN'] === 'string' || data['OAUTH_ACCESS_TOKEN'] instanceof String)) {
            throw new Error("Expected the field `OAUTH_ACCESS_TOKEN` to be a primitive type in the JSON string but got " + data['OAUTH_ACCESS_TOKEN']);
        }
        // ensure the json data is a string
        if (data['OAUTH_REFRESH_TOKEN'] && !(typeof data['OAUTH_REFRESH_TOKEN'] === 'string' || data['OAUTH_REFRESH_TOKEN'] instanceof String)) {
            throw new Error("Expected the field `OAUTH_REFRESH_TOKEN` to be a primitive type in the JSON string but got " + data['OAUTH_REFRESH_TOKEN']);
        }
        // ensure the json data is a string
        if (data['PERMISSION_SET_MANAGEMENT'] && !(typeof data['PERMISSION_SET_MANAGEMENT'] === 'string' || data['PERMISSION_SET_MANAGEMENT'] instanceof String)) {
            throw new Error("Expected the field `PERMISSION_SET_MANAGEMENT` to be a primitive type in the JSON string but got " + data['PERMISSION_SET_MANAGEMENT']);
        }
        // ensure the json data is a string
        if (data['PROFILE_ID'] && !(typeof data['PROFILE_ID'] === 'string' || data['PROFILE_ID'] instanceof String)) {
            throw new Error("Expected the field `PROFILE_ID` to be a primitive type in the JSON string but got " + data['PROFILE_ID']);
        }
        // ensure the json data is a string
        if (data['SALESFORCE_DOMAIN'] && !(typeof data['SALESFORCE_DOMAIN'] === 'string' || data['SALESFORCE_DOMAIN'] instanceof String)) {
            throw new Error("Expected the field `SALESFORCE_DOMAIN` to be a primitive type in the JSON string but got " + data['SALESFORCE_DOMAIN']);
        }

        return true;
    }


}

PropagationStoreConfigurationSalesforce.RequiredProperties = ["CLIENT_ID", "CLIENT_SECRET", "ENABLE_COMMUNITIES", "FREEZE_USER_FLAG", "OAUTH_ACCESS_TOKEN", "OAUTH_REFRESH_TOKEN", "PERMISSION_SET_MANAGEMENT", "SALESFORCE_DOMAIN"];

/**
 * The Salesforce account ID.
 * @member {String} ACCOUNT_ID
 */
PropagationStoreConfigurationSalesforce.prototype['ACCOUNT_ID'] = undefined;

/**
 * The Salesforce client ID.
 * @member {String} CLIENT_ID
 */
PropagationStoreConfigurationSalesforce.prototype['CLIENT_ID'] = undefined;

/**
 * The Salesforce client secret.
 * @member {String} CLIENT_SECRET
 */
PropagationStoreConfigurationSalesforce.prototype['CLIENT_SECRET'] = undefined;

/**
 * Whether or not users are allowed to be created.
 * @member {Boolean} CREATE_USERS
 */
PropagationStoreConfigurationSalesforce.prototype['CREATE_USERS'] = undefined;

/**
 * Whether or not users are allowed to be disabled.
 * @member {Boolean} DISABLE_USERS
 */
PropagationStoreConfigurationSalesforce.prototype['DISABLE_USERS'] = undefined;

/**
 * Whether or not to enable Salesforce communities.
 * @member {Boolean} ENABLE_COMMUNITIES
 */
PropagationStoreConfigurationSalesforce.prototype['ENABLE_COMMUNITIES'] = undefined;

/**
 * Whether the user account is frozen.
 * @member {Boolean} FREEZE_USER_FLAG
 */
PropagationStoreConfigurationSalesforce.prototype['FREEZE_USER_FLAG'] = undefined;

/**
 * OAuth access token for account authentication.
 * @member {String} OAUTH_ACCESS_TOKEN
 */
PropagationStoreConfigurationSalesforce.prototype['OAUTH_ACCESS_TOKEN'] = undefined;

/**
 * OAuth refresh token for account authentication.
 * @member {String} OAUTH_REFRESH_TOKEN
 */
PropagationStoreConfigurationSalesforce.prototype['OAUTH_REFRESH_TOKEN'] = undefined;

/**
 * The permission sets to be merged with Salesforce.
 * @member {String} PERMISSION_SET_MANAGEMENT
 */
PropagationStoreConfigurationSalesforce.prototype['PERMISSION_SET_MANAGEMENT'] = undefined;

/**
 * The Salesforce profile ID.
 * @member {String} PROFILE_ID
 */
PropagationStoreConfigurationSalesforce.prototype['PROFILE_ID'] = undefined;

/**
 * Whether or not disabled users can be provisioned.
 * @member {Boolean} PROVISION_DISABLED_USERS
 */
PropagationStoreConfigurationSalesforce.prototype['PROVISION_DISABLED_USERS'] = undefined;

/**
 * The account's salesforce.com domain.
 * @member {String} SALESFORCE_DOMAIN
 */
PropagationStoreConfigurationSalesforce.prototype['SALESFORCE_DOMAIN'] = undefined;

/**
 * Whether or not users are allowed to be updated.
 * @member {Boolean} UPDATE_USERS
 */
PropagationStoreConfigurationSalesforce.prototype['UPDATE_USERS'] = undefined;






export default PropagationStoreConfigurationSalesforce;

