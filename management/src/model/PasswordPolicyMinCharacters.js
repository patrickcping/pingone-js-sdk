/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PasswordPolicyMinCharacters model module.
 * @module model/PasswordPolicyMinCharacters
 * @version 2023-06-29
 */
class PasswordPolicyMinCharacters {
    /**
     * Constructs a new <code>PasswordPolicyMinCharacters</code>.
     * A set of key-value pairs where the key is contains all characters that can be included, and the value is the minimum number of times one of the characters must appear in the password. The only allowed key values are &#x60;ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x60;, &#x60;abcdefghijklmnopqrstuvwxyz&#x60;, &#x60;0123456789&#x60;, and &#x60;~!@#$%^&amp;*()-_&#x3D;+[]{}\\|;:,.&lt;&gt;/?&#x60;. This property is not enforced when not present.
     * @alias module:model/PasswordPolicyMinCharacters
     */
    constructor() { 
        
        PasswordPolicyMinCharacters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PasswordPolicyMinCharacters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PasswordPolicyMinCharacters} obj Optional instance to populate.
     * @return {module:model/PasswordPolicyMinCharacters} The populated <code>PasswordPolicyMinCharacters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PasswordPolicyMinCharacters();

            if (data.hasOwnProperty('ABCDEFGHIJKLMNOPQRSTUVWXYZ')) {
                obj['ABCDEFGHIJKLMNOPQRSTUVWXYZ'] = ApiClient.convertToType(data['ABCDEFGHIJKLMNOPQRSTUVWXYZ'], 'Number');
            }
            if (data.hasOwnProperty('abcdefghijklmnopqrstuvwxyz')) {
                obj['abcdefghijklmnopqrstuvwxyz'] = ApiClient.convertToType(data['abcdefghijklmnopqrstuvwxyz'], 'Number');
            }
            if (data.hasOwnProperty('0123456789')) {
                obj['0123456789'] = ApiClient.convertToType(data['0123456789'], 'Number');
            }
            if (data.hasOwnProperty('~!@#$%^&amp;*()-_&#x3D;+[]{}|;:,.&lt;&gt;/?')) {
                obj['~!@#$%^&amp;*()-_&#x3D;+[]{}|;:,.&lt;&gt;/?'] = ApiClient.convertToType(data['~!@#$%^&*()-_=+[]{}|;:,.<>/?'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PasswordPolicyMinCharacters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PasswordPolicyMinCharacters</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Count of alphabetical uppercase characters (`ABCDEFGHIJKLMNOPQRSTUVWXYZ`) that should feature in the user's password.
 * @member {Number} ABCDEFGHIJKLMNOPQRSTUVWXYZ
 */
PasswordPolicyMinCharacters.prototype['ABCDEFGHIJKLMNOPQRSTUVWXYZ'] = undefined;

/**
 * Count of alphabetical uppercase characters (`abcdefghijklmnopqrstuvwxyz`) that should feature in the user's password.
 * @member {Number} abcdefghijklmnopqrstuvwxyz
 */
PasswordPolicyMinCharacters.prototype['abcdefghijklmnopqrstuvwxyz'] = undefined;

/**
 * Count of numeric characters (`0123456789`) that should feature in the user's password.
 * @member {Number} 0123456789
 */
PasswordPolicyMinCharacters.prototype['0123456789'] = undefined;

/**
 * Count of special characters (`~!@#$%^&*()-_=+[]{}\\\\|;:,.<>/?`) that should feature in the user's password.
 * @member {Number} ~!@#$%^&amp;*()-_&#x3D;+[]{}|;:,.&lt;&gt;/?
 */
PasswordPolicyMinCharacters.prototype['~!@#$%^&amp;*()-_&#x3D;+[]{}|;:,.&lt;&gt;/?'] = undefined;






export default PasswordPolicyMinCharacters;

