/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumGatewayType from './EnumGatewayType';
import EnumGatewayTypeLDAPSecurity from './EnumGatewayTypeLDAPSecurity';
import EnumGatewayVendor from './EnumGatewayVendor';
import Gateway from './Gateway';
import GatewayCredential from './GatewayCredential';
import GatewaySupportedVersionsInner from './GatewaySupportedVersionsInner';
import GatewayTypeLDAP from './GatewayTypeLDAP';
import GatewayTypeLDAPAllOfKerberos from './GatewayTypeLDAPAllOfKerberos';
import GatewayTypeLDAPAllOfUserTypes from './GatewayTypeLDAPAllOfUserTypes';
import GatewayTypeRADIUS from './GatewayTypeRADIUS';
import GatewayTypeRADIUSAllOfDavinci from './GatewayTypeRADIUSAllOfDavinci';
import GatewayTypeRADIUSAllOfRadiusClients from './GatewayTypeRADIUSAllOfRadiusClients';
import LinksHATEOAS from './LinksHATEOAS';
import ObjectEnvironment from './ObjectEnvironment';

/**
 * The CreateGateway201Response model module.
 * @module model/CreateGateway201Response
 * @version 2023-06-29
 */
class CreateGateway201Response {
    /**
     * Constructs a new <code>CreateGateway201Response</code>.
     * @alias module:model/CreateGateway201Response
     * @param {(module:model/Gateway|module:model/GatewayTypeLDAP|module:model/GatewayTypeRADIUS)} instance The actual instance to initialize CreateGateway201Response.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "Gateway") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                Gateway.validateJSON(instance); // throw an exception if no match
                // create Gateway from JS object
                this.actualInstance = Gateway.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into Gateway
            errorMessages.push("Failed to construct Gateway: " + err)
        }

        try {
            if (typeof instance === "GatewayTypeLDAP") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GatewayTypeLDAP.validateJSON(instance); // throw an exception if no match
                // create GatewayTypeLDAP from JS object
                this.actualInstance = GatewayTypeLDAP.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GatewayTypeLDAP
            errorMessages.push("Failed to construct GatewayTypeLDAP: " + err)
        }

        try {
            if (typeof instance === "GatewayTypeRADIUS") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                GatewayTypeRADIUS.validateJSON(instance); // throw an exception if no match
                // create GatewayTypeRADIUS from JS object
                this.actualInstance = GatewayTypeRADIUS.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into GatewayTypeRADIUS
            errorMessages.push("Failed to construct GatewayTypeRADIUS: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `CreateGateway201Response` with oneOf schemas Gateway, GatewayTypeLDAP, GatewayTypeRADIUS. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `CreateGateway201Response` with oneOf schemas Gateway, GatewayTypeLDAP, GatewayTypeRADIUS. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>CreateGateway201Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateGateway201Response} obj Optional instance to populate.
     * @return {module:model/CreateGateway201Response} The populated <code>CreateGateway201Response</code> instance.
     */
    static constructFromObject(data, obj) {
        return new CreateGateway201Response(data);
    }

    /**
     * Gets the actual instance, which can be <code>Gateway</code>, <code>GatewayTypeLDAP</code>, <code>GatewayTypeRADIUS</code>.
     * @return {(module:model/Gateway|module:model/GatewayTypeLDAP|module:model/GatewayTypeRADIUS)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>Gateway</code>, <code>GatewayTypeLDAP</code>, <code>GatewayTypeRADIUS</code>.
     * @param {(module:model/Gateway|module:model/GatewayTypeLDAP|module:model/GatewayTypeRADIUS)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = CreateGateway201Response.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of CreateGateway201Response from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/CreateGateway201Response} An instance of CreateGateway201Response.
     */
    static fromJSON = function(json_string){
        return CreateGateway201Response.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * @member {module:model/LinksHATEOAS} _links
 */
CreateGateway201Response.prototype['_links'] = undefined;

/**
 * A string that specifies the instance ID of the gateway. The gateway instance ID is created by the gateway when it starts up.
 * @member {String} id
 */
CreateGateway201Response.prototype['id'] = undefined;

/**
 * @member {module:model/ObjectEnvironment} environment
 */
CreateGateway201Response.prototype['environment'] = undefined;

/**
 * @member {Array.<module:model/GatewayCredential>} credentials
 */
CreateGateway201Response.prototype['credentials'] = undefined;

/**
 * A string that specifies the resource name, which must be provided and must be unique within an environment. Valid characters are any Unicode letter, mark, numeric character, forward slash, dot, apostrophe, underscore, space, or hyphen.
 * @member {String} name
 */
CreateGateway201Response.prototype['name'] = undefined;

/**
 * A string that specifies the description of the resource.
 * @member {String} description
 */
CreateGateway201Response.prototype['description'] = undefined;

/**
 * @member {module:model/EnumGatewayType} type
 */
CreateGateway201Response.prototype['type'] = undefined;

/**
 * A boolean that specifies whether the gateway is enabled. This is a required property.
 * @member {Boolean} enabled
 */
CreateGateway201Response.prototype['enabled'] = undefined;

/**
 * An array that lists the LDAP gateway versions associated with this gateway resource. This information is returned on a GET {{apiPath}}/environments/{{environmentID}}/gateways request, and it is used to trigger alerts if the gateway tries to connect with an unsupported version (or a version that is not the latest or recommended version).
 * @member {Array.<module:model/GatewaySupportedVersionsInner>} supportedVersions
 */
CreateGateway201Response.prototype['supportedVersions'] = undefined;

/**
 * @member {Array.<Object>} currentAlerts
 */
CreateGateway201Response.prototype['currentAlerts'] = undefined;

/**
 * A string that specifies the distinguished name information to bind to the LDAP database (for example, uid=pingone,dc=example,dc=com).
 * @member {String} bindDN
 */
CreateGateway201Response.prototype['bindDN'] = undefined;

/**
 * A string that specifies the bind password for the LDAP database. This is a required property.
 * @member {String} bindPassword
 */
CreateGateway201Response.prototype['bindPassword'] = undefined;

/**
 * @member {module:model/EnumGatewayTypeLDAPSecurity} connectionSecurity
 */
CreateGateway201Response.prototype['connectionSecurity'] = undefined;

/**
 * @member {module:model/GatewayTypeLDAPAllOfKerberos} kerberos
 */
CreateGateway201Response.prototype['kerberos'] = undefined;

/**
 * An array of strings that specifies the LDAP server host name and port number (for example, [`ds1.example.com:389`, `ds2.example.com:389`]).
 * @member {Array.<String>} serversHostAndPort
 */
CreateGateway201Response.prototype['serversHostAndPort'] = undefined;

/**
 * An array of the userTypes properties for the users to be provisioned in PingOne. userTypes specifies which user properties in PingOne correspond to the user properties in an external LDAP directory. You can use an LDAP browser to view the user properties in the external LDAP directory.
 * @member {Array.<module:model/GatewayTypeLDAPAllOfUserTypes>} userTypes
 */
CreateGateway201Response.prototype['userTypes'] = undefined;

/**
 * A boolean that specifies whether or not to trust all SSL certificates (defaults to true). If this value is false, TLS certificates are not validated. When the value is set to true, only certificates that are signed by the default JVM CAs, or the CA certs that the customer has uploaded to the certificate service are trusted.
 * @member {Boolean} validateTlsCertificates
 */
CreateGateway201Response.prototype['validateTlsCertificates'] = undefined;

/**
 * @member {module:model/EnumGatewayVendor} vendor
 */
CreateGateway201Response.prototype['vendor'] = undefined;

/**
 * @member {Boolean} followReferrals
 */
CreateGateway201Response.prototype['followReferrals'] = undefined;

/**
 * @member {module:model/GatewayTypeRADIUSAllOfDavinci} davinci
 */
CreateGateway201Response.prototype['davinci'] = undefined;

/**
 * Value to use for the shared secret if the shared secret is not provided for one or more of the RADIUS clients specified.
 * @member {String} defaultSharedSecret
 */
CreateGateway201Response.prototype['defaultSharedSecret'] = undefined;

/**
 * Collection of RADIUS clients.
 * @member {Array.<module:model/GatewayTypeRADIUSAllOfRadiusClients>} radiusClients
 */
CreateGateway201Response.prototype['radiusClients'] = undefined;


CreateGateway201Response.OneOf = ["Gateway", "GatewayTypeLDAP", "GatewayTypeRADIUS"];

export default CreateGateway201Response;

