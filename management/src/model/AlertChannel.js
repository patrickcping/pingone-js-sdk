/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumAlertChannelAlertType from './EnumAlertChannelAlertType';
import EnumAlertChannelSeverity from './EnumAlertChannelSeverity';
import EnumAlertChannelType from './EnumAlertChannelType';
import LinksHATEOAS from './LinksHATEOAS';
import ObjectEnvironment from './ObjectEnvironment';

/**
 * The AlertChannel model module.
 * @module model/AlertChannel
 * @version 2023-06-29
 */
class AlertChannel {
    /**
     * Constructs a new <code>AlertChannel</code>.
     * @alias module:model/AlertChannel
     * @param channelType {module:model/EnumAlertChannelType} 
     * @param addresses {Array.<String>} The email addresses to send the alert to.
     */
    constructor(channelType, addresses) { 
        
        AlertChannel.initialize(this, channelType, addresses);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelType, addresses) { 
        obj['channelType'] = channelType;
        obj['addresses'] = addresses;
    }

    /**
     * Constructs a <code>AlertChannel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AlertChannel} obj Optional instance to populate.
     * @return {module:model/AlertChannel} The populated <code>AlertChannel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AlertChannel();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('environment')) {
                obj['environment'] = ObjectEnvironment.constructFromObject(data['environment']);
            }
            if (data.hasOwnProperty('channelType')) {
                obj['channelType'] = EnumAlertChannelType.constructFromObject(data['channelType']);
            }
            if (data.hasOwnProperty('addresses')) {
                obj['addresses'] = ApiClient.convertToType(data['addresses'], ['String']);
            }
            if (data.hasOwnProperty('includeSeverities')) {
                obj['includeSeverities'] = ApiClient.convertToType(data['includeSeverities'], [EnumAlertChannelSeverity]);
            }
            if (data.hasOwnProperty('includeAlertTypes')) {
                obj['includeAlertTypes'] = ApiClient.convertToType(data['includeAlertTypes'], [EnumAlertChannelAlertType]);
            }
            if (data.hasOwnProperty('excludeAlertTypes')) {
                obj['excludeAlertTypes'] = ApiClient.convertToType(data['excludeAlertTypes'], [EnumAlertChannelAlertType]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AlertChannel</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AlertChannel</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AlertChannel.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `environment`
        if (data['environment']) { // data not null
          ObjectEnvironment.validateJSON(data['environment']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['addresses'])) {
            throw new Error("Expected the field `addresses` to be an array in the JSON data but got " + data['addresses']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includeSeverities'])) {
            throw new Error("Expected the field `includeSeverities` to be an array in the JSON data but got " + data['includeSeverities']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includeAlertTypes'])) {
            throw new Error("Expected the field `includeAlertTypes` to be an array in the JSON data but got " + data['includeAlertTypes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['excludeAlertTypes'])) {
            throw new Error("Expected the field `excludeAlertTypes` to be an array in the JSON data but got " + data['excludeAlertTypes']);
        }

        return true;
    }


}

AlertChannel.RequiredProperties = ["channelType", "addresses"];

/**
 * @member {module:model/LinksHATEOAS} _links
 */
AlertChannel.prototype['_links'] = undefined;

/**
 * Unique ID of the alert channel.
 * @member {String} id
 */
AlertChannel.prototype['id'] = undefined;

/**
 * @member {module:model/ObjectEnvironment} environment
 */
AlertChannel.prototype['environment'] = undefined;

/**
 * @member {module:model/EnumAlertChannelType} channelType
 */
AlertChannel.prototype['channelType'] = undefined;

/**
 * The email addresses to send the alert to.
 * @member {Array.<String>} addresses
 */
AlertChannel.prototype['addresses'] = undefined;

/**
 * Filters alerts by severity. If empty, all severities are included. Possible values are `INFO`, `WARNING`, and `ERROR``.
 * @member {Array.<module:model/EnumAlertChannelSeverity>} includeSeverities
 */
AlertChannel.prototype['includeSeverities'] = undefined;

/**
 * Filters alerts by alert type. If empty, all alert types are included. Possible values are CERTIFICATE_EXPIRED, CERTIFICATE_EXPIRING, KEY_PAIR_EXPIRED, GATEWAY_VERSION_DEPRECATED, KEY_PAIR_EXPIRING, and GATEWAY_VERSION_DEPRECATING.
 * @member {Array.<module:model/EnumAlertChannelAlertType>} includeAlertTypes
 */
AlertChannel.prototype['includeAlertTypes'] = undefined;

/**
 * Administrators will not be emailed alerts of these types. If empty, no alert types are excluded. Possible values are CERTIFICATE_EXPIRED, CERTIFICATE_EXPIRING, KEY_PAIR_EXPIRED, GATEWAY_VERSION_DEPRECATED, KEY_PAIR_EXPIRING, and GATEWAY_VERSION_DEPRECATING.
 * @member {Array.<module:model/EnumAlertChannelAlertType>} excludeAlertTypes
 */
AlertChannel.prototype['excludeAlertTypes'] = undefined;






export default AlertChannel;

