/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumFormItemAlignment from './EnumFormItemAlignment';
import EnumFormRecaptchaV2Size from './EnumFormRecaptchaV2Size';
import EnumFormRecaptchaV2Theme from './EnumFormRecaptchaV2Theme';

/**
 * The FormRecaptchaV2 model module.
 * @module model/FormRecaptchaV2
 * @version 2023-06-29
 */
class FormRecaptchaV2 {
    /**
     * Constructs a new <code>FormRecaptchaV2</code>.
     * @alias module:model/FormRecaptchaV2
     * @param size {module:model/EnumFormRecaptchaV2Size} 
     * @param theme {module:model/EnumFormRecaptchaV2Theme} 
     * @param alignment {module:model/EnumFormItemAlignment} 
     */
    constructor(size, theme, alignment) { 
        
        FormRecaptchaV2.initialize(this, size, theme, alignment);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, size, theme, alignment) { 
        obj['size'] = size;
        obj['theme'] = theme;
        obj['alignment'] = alignment;
    }

    /**
     * Constructs a <code>FormRecaptchaV2</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FormRecaptchaV2} obj Optional instance to populate.
     * @return {module:model/FormRecaptchaV2} The populated <code>FormRecaptchaV2</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FormRecaptchaV2();

            if (data.hasOwnProperty('size')) {
                obj['size'] = EnumFormRecaptchaV2Size.constructFromObject(data['size']);
            }
            if (data.hasOwnProperty('theme')) {
                obj['theme'] = EnumFormRecaptchaV2Theme.constructFromObject(data['theme']);
            }
            if (data.hasOwnProperty('alignment')) {
                obj['alignment'] = EnumFormItemAlignment.constructFromObject(data['alignment']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FormRecaptchaV2</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FormRecaptchaV2</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of FormRecaptchaV2.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

FormRecaptchaV2.RequiredProperties = ["size", "theme", "alignment"];

/**
 * @member {module:model/EnumFormRecaptchaV2Size} size
 */
FormRecaptchaV2.prototype['size'] = undefined;

/**
 * @member {module:model/EnumFormRecaptchaV2Theme} theme
 */
FormRecaptchaV2.prototype['theme'] = undefined;

/**
 * @member {module:model/EnumFormItemAlignment} alignment
 */
FormRecaptchaV2.prototype['alignment'] = undefined;






export default FormRecaptchaV2;

