/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillOfMaterials from './BillOfMaterials';
import EnumEnvironmentType from './EnumEnvironmentType';
import EnvironmentLicense from './EnvironmentLicense';
import EnvironmentOrganization from './EnvironmentOrganization';
import EnvironmentRegion from './EnvironmentRegion';
import LinksHATEOAS from './LinksHATEOAS';

/**
 * The Environment model module.
 * @module model/Environment
 * @version 2023-06-29
 */
class Environment {
    /**
     * Constructs a new <code>Environment</code>.
     * @alias module:model/Environment
     * @param license {module:model/EnvironmentLicense} 
     * @param name {String} A string that specifies the environment name, which must be provided and must be unique within an organization.
     * @param region {module:model/EnvironmentRegion} 
     * @param type {module:model/EnumEnvironmentType} 
     */
    constructor(license, name, region, type) { 
        
        Environment.initialize(this, license, name, region, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, license, name, region, type) { 
        obj['license'] = license;
        obj['name'] = name;
        obj['region'] = region;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>Environment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Environment} obj Optional instance to populate.
     * @return {module:model/Environment} The populated <code>Environment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Environment();

            if (data.hasOwnProperty('_links')) {
                obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
            }
            if (data.hasOwnProperty('billOfMaterials')) {
                obj['billOfMaterials'] = BillOfMaterials.constructFromObject(data['billOfMaterials']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('icon')) {
                obj['icon'] = ApiClient.convertToType(data['icon'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('license')) {
                obj['license'] = EnvironmentLicense.constructFromObject(data['license']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = EnvironmentOrganization.constructFromObject(data['organization']);
            }
            if (data.hasOwnProperty('region')) {
                obj['region'] = EnvironmentRegion.constructFromObject(data['region']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = EnumEnvironmentType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Environment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Environment</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Environment.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `billOfMaterials`
        if (data['billOfMaterials']) { // data not null
          BillOfMaterials.validateJSON(data['billOfMaterials']);
        }
        // ensure the json data is a string
        if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
            throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['icon'] && !(typeof data['icon'] === 'string' || data['icon'] instanceof String)) {
            throw new Error("Expected the field `icon` to be a primitive type in the JSON string but got " + data['icon']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `license`
        if (data['license']) { // data not null
          EnvironmentLicense.validateJSON(data['license']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `organization`
        if (data['organization']) { // data not null
          EnvironmentOrganization.validateJSON(data['organization']);
        }
        // validate the optional field `region`
        if (data['region']) { // data not null
          EnvironmentRegion.validateJSON(data['region']);
        }
        // ensure the json data is a string
        if (data['updatedAt'] && !(typeof data['updatedAt'] === 'string' || data['updatedAt'] instanceof String)) {
            throw new Error("Expected the field `updatedAt` to be a primitive type in the JSON string but got " + data['updatedAt']);
        }

        return true;
    }


}

Environment.RequiredProperties = ["license", "name", "region", "type"];

/**
 * @member {module:model/LinksHATEOAS} _links
 */
Environment.prototype['_links'] = undefined;

/**
 * @member {module:model/BillOfMaterials} billOfMaterials
 */
Environment.prototype['billOfMaterials'] = undefined;

/**
 * The time the resource was created.
 * @member {String} createdAt
 */
Environment.prototype['createdAt'] = undefined;

/**
 * A string that specifies the description of the population.
 * @member {String} description
 */
Environment.prototype['description'] = undefined;

/**
 * The URL referencing the image to use for the environment icon. The supported image types are JPEG/JPG, PNG, and GIF.
 * @member {String} icon
 */
Environment.prototype['icon'] = undefined;

/**
 * A string that specifies the resourceâ€™s unique identifier.
 * @member {String} id
 */
Environment.prototype['id'] = undefined;

/**
 * @member {module:model/EnvironmentLicense} license
 */
Environment.prototype['license'] = undefined;

/**
 * A string that specifies the environment name, which must be provided and must be unique within an organization.
 * @member {String} name
 */
Environment.prototype['name'] = undefined;

/**
 * @member {module:model/EnvironmentOrganization} organization
 */
Environment.prototype['organization'] = undefined;

/**
 * @member {module:model/EnvironmentRegion} region
 */
Environment.prototype['region'] = undefined;

/**
 * @member {module:model/EnumEnvironmentType} type
 */
Environment.prototype['type'] = undefined;

/**
 * The time the resource was last updated.
 * @member {String} updatedAt
 */
Environment.prototype['updatedAt'] = undefined;






export default Environment;

