/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SignOnPolicyActionLoginAllOfNewUserProvisioningGateways from './SignOnPolicyActionLoginAllOfNewUserProvisioningGateways';

/**
 * The SignOnPolicyActionLoginAllOfNewUserProvisioning model module.
 * @module model/SignOnPolicyActionLoginAllOfNewUserProvisioning
 * @version 2023-06-29
 */
class SignOnPolicyActionLoginAllOfNewUserProvisioning {
    /**
     * Constructs a new <code>SignOnPolicyActionLoginAllOfNewUserProvisioning</code>.
     * Enables user entries existing outside of PingOne to be provisioned in PingDirectory during login, using an external integration solution (such as a Gateway).
     * @alias module:model/SignOnPolicyActionLoginAllOfNewUserProvisioning
     * @param gateways {Array.<module:model/SignOnPolicyActionLoginAllOfNewUserProvisioningGateways>} Allows a set of preconfigured gateways or `userType` pairs that are specified in the [Gateway Management](https://apidocs.pingidentity.com/pingone/platform/v1/api/#gateway-management) schema to determine how to find and migrate user entries existing in an external directory.
     */
    constructor(gateways) { 
        
        SignOnPolicyActionLoginAllOfNewUserProvisioning.initialize(this, gateways);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, gateways) { 
        obj['gateways'] = gateways;
    }

    /**
     * Constructs a <code>SignOnPolicyActionLoginAllOfNewUserProvisioning</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SignOnPolicyActionLoginAllOfNewUserProvisioning} obj Optional instance to populate.
     * @return {module:model/SignOnPolicyActionLoginAllOfNewUserProvisioning} The populated <code>SignOnPolicyActionLoginAllOfNewUserProvisioning</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SignOnPolicyActionLoginAllOfNewUserProvisioning();

            if (data.hasOwnProperty('gateways')) {
                obj['gateways'] = ApiClient.convertToType(data['gateways'], [SignOnPolicyActionLoginAllOfNewUserProvisioningGateways]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SignOnPolicyActionLoginAllOfNewUserProvisioning</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SignOnPolicyActionLoginAllOfNewUserProvisioning</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SignOnPolicyActionLoginAllOfNewUserProvisioning.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['gateways']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['gateways'])) {
                throw new Error("Expected the field `gateways` to be an array in the JSON data but got " + data['gateways']);
            }
            // validate the optional field `gateways` (array)
            for (const item of data['gateways']) {
                SignOnPolicyActionLoginAllOfNewUserProvisioningGateways.validateJSON(item);
            };
        }

        return true;
    }


}

SignOnPolicyActionLoginAllOfNewUserProvisioning.RequiredProperties = ["gateways"];

/**
 * Allows a set of preconfigured gateways or `userType` pairs that are specified in the [Gateway Management](https://apidocs.pingidentity.com/pingone/platform/v1/api/#gateway-management) schema to determine how to find and migrate user entries existing in an external directory.
 * @member {Array.<module:model/SignOnPolicyActionLoginAllOfNewUserProvisioningGateways>} gateways
 */
SignOnPolicyActionLoginAllOfNewUserProvisioning.prototype['gateways'] = undefined;






export default SignOnPolicyActionLoginAllOfNewUserProvisioning;

