/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumCertificateKeyUsageType from './EnumCertificateKeyUsageType';

/**
 * The CertificateKeyUpdate model module.
 * @module model/CertificateKeyUpdate
 * @version 2023-06-29
 */
class CertificateKeyUpdate {
  /**
   * Constructs a new <code>CertificateKeyUpdate</code>.
   * @alias module:model/CertificateKeyUpdate
   * @param _default {Boolean} Specifies whether this is the default key for the specified environment.
   * @param usageType {module:model/EnumCertificateKeyUsageType} 
   */
  constructor(_default, usageType) {
    CertificateKeyUpdate.initialize(this, _default, usageType);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, _default, usageType) {
    obj['default'] = _default;
    obj['usageType'] = usageType;
  }

  /**
   * Constructs a <code>CertificateKeyUpdate</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CertificateKeyUpdate} obj Optional instance to populate.
   * @return {module:model/CertificateKeyUpdate} The populated <code>CertificateKeyUpdate</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CertificateKeyUpdate();
      if (data.hasOwnProperty('default')) {
        obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
      }
      if (data.hasOwnProperty('usageType')) {
        obj['usageType'] = EnumCertificateKeyUsageType.constructFromObject(data['usageType']);
      }
      if (data.hasOwnProperty('issuerDN')) {
        obj['issuerDN'] = ApiClient.convertToType(data['issuerDN'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>CertificateKeyUpdate</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CertificateKeyUpdate</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of CertificateKeyUpdate.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['issuerDN'] && !(typeof data['issuerDN'] === 'string' || data['issuerDN'] instanceof String)) {
      throw new Error("Expected the field `issuerDN` to be a primitive type in the JSON string but got " + data['issuerDN']);
    }
    return true;
  }
}
CertificateKeyUpdate.RequiredProperties = ["default", "usageType"];

/**
 * Specifies whether this is the default key for the specified environment.
 * @member {Boolean} default
 */
CertificateKeyUpdate.prototype['default'] = undefined;

/**
 * @member {module:model/EnumCertificateKeyUsageType} usageType
 */
CertificateKeyUpdate.prototype['usageType'] = undefined;

/**
 * Specifies the distinguished name of the certificate issuer.
 * @member {String} issuerDN
 */
CertificateKeyUpdate.prototype['issuerDN'] = undefined;
export default CertificateKeyUpdate;