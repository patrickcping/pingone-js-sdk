/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumOrganizationType from './EnumOrganizationType';
import LinksHATEOAS from './LinksHATEOAS';
import OrganizationBillingConnectionsInner from './OrganizationBillingConnectionsInner';

/**
 * The Organization model module.
 * @module model/Organization
 * @version 2023-06-29
 */
class Organization {
  /**
   * Constructs a new <code>Organization</code>.
   * @alias module:model/Organization
   */
  constructor() {
    Organization.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>Organization</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Organization} obj Optional instance to populate.
   * @return {module:model/Organization} The populated <code>Organization</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new Organization();
      if (data.hasOwnProperty('_links')) {
        obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
      }
      if (data.hasOwnProperty('updatedAt')) {
        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = EnumOrganizationType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('billingConnections')) {
        obj['billingConnections'] = ApiClient.convertToType(data['billingConnections'], [OrganizationBillingConnectionsInner]);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>Organization</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Organization</code>.
   */
  static validateJSON(data) {
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    // ensure the json data is a string
    if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
      throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
    }
    // ensure the json data is a string
    if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
      throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
    }
    // ensure the json data is a string
    if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
      throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
    }
    // ensure the json data is a string
    if (data['updatedAt'] && !(typeof data['updatedAt'] === 'string' || data['updatedAt'] instanceof String)) {
      throw new Error("Expected the field `updatedAt` to be a primitive type in the JSON string but got " + data['updatedAt']);
    }
    if (data['billingConnections']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['billingConnections'])) {
        throw new Error("Expected the field `billingConnections` to be an array in the JSON data but got " + data['billingConnections']);
      }
      // validate the optional field `billingConnections` (array)
      for (const item of data['billingConnections']) {
        OrganizationBillingConnectionsInner.validateJSON(item);
      }
      ;
    }
    return true;
  }
}

/**
 * @member {module:model/LinksHATEOAS} _links
 */
Organization.prototype['_links'] = undefined;

/**
 * A string that specifies the resourceâ€™s unique identifier.
 * @member {String} id
 */
Organization.prototype['id'] = undefined;

/**
 * A string that specifies the organization name, which must be provided and must be unique among all organizations in PingOne.
 * @member {String} name
 */
Organization.prototype['name'] = undefined;

/**
 * A string that specifies the description of the organization.
 * @member {String} description
 */
Organization.prototype['description'] = undefined;

/**
 * The time the resource was created.
 * @member {String} createdAt
 */
Organization.prototype['createdAt'] = undefined;

/**
 * The time the resource was last updated.
 * @member {String} updatedAt
 */
Organization.prototype['updatedAt'] = undefined;

/**
 * @member {module:model/EnumOrganizationType} type
 */
Organization.prototype['type'] = undefined;

/**
 * @member {Array.<module:model/OrganizationBillingConnectionsInner>} billingConnections
 */
Organization.prototype['billingConnections'] = undefined;
export default Organization;