/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumUserStatus from './EnumUserStatus';

/**
 * The UserAccount model module.
 * @module model/UserAccount
 * @version 2023-06-29
 */
class UserAccount {
  /**
   * Constructs a new <code>UserAccount</code>.
   * @alias module:model/UserAccount
   * @param canAuthenticate {Boolean} A boolean that specifies whether the user can authenticate. If the value is set to `false`, the account is locked or the user is disabled, and unless specified otherwise by the administrative configuration, the user will be unable to authenticate.
   * @param status {module:model/EnumUserStatus} 
   */
  constructor(canAuthenticate, status) {
    UserAccount.initialize(this, canAuthenticate, status);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, canAuthenticate, status) {
    obj['canAuthenticate'] = canAuthenticate;
    obj['status'] = status;
  }

  /**
   * Constructs a <code>UserAccount</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserAccount} obj Optional instance to populate.
   * @return {module:model/UserAccount} The populated <code>UserAccount</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new UserAccount();
      if (data.hasOwnProperty('canAuthenticate')) {
        obj['canAuthenticate'] = ApiClient.convertToType(data['canAuthenticate'], 'Boolean');
      }
      if (data.hasOwnProperty('lockedAt')) {
        obj['lockedAt'] = ApiClient.convertToType(data['lockedAt'], 'Date');
      }
      if (data.hasOwnProperty('secondsUntilUnlock')) {
        obj['secondsUntilUnlock'] = ApiClient.convertToType(data['secondsUntilUnlock'], 'Number');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = EnumUserStatus.constructFromObject(data['status']);
      }
      if (data.hasOwnProperty('unlockAt')) {
        obj['unlockAt'] = ApiClient.convertToType(data['unlockAt'], 'Date');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>UserAccount</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserAccount</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of UserAccount.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    return true;
  }
}
UserAccount.RequiredProperties = ["canAuthenticate", "status"];

/**
 * A boolean that specifies whether the user can authenticate. If the value is set to `false`, the account is locked or the user is disabled, and unless specified otherwise by the administrative configuration, the user will be unable to authenticate.
 * @member {Boolean} canAuthenticate
 */
UserAccount.prototype['canAuthenticate'] = undefined;

/**
 * A string that specifies the date-time the specified user account was locked. This property might be absent if the account is unlocked or if the account was locked out automatically by failed password attempts.
 * @member {Date} lockedAt
 */
UserAccount.prototype['lockedAt'] = undefined;

/**
 * An integer that specifies the number of seconds until the user's account is unlocked. This property is absent if the account is unlocked, or if it will not automatically unlock (and must be unlocked by an administrator).
 * @member {Number} secondsUntilUnlock
 */
UserAccount.prototype['secondsUntilUnlock'] = undefined;

/**
 * @member {module:model/EnumUserStatus} status
 */
UserAccount.prototype['status'] = undefined;

/**
 * A string that specifies the time the specified user account will be unlocked. This property is absent if the account is unlocked, or if it will not automatically unlock (and must be unlocked by an administrator).
 * @member {Date} unlockAt
 */
UserAccount.prototype['unlockAt'] = undefined;
export default UserAccount;