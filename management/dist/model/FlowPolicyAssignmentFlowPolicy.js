/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FlowPolicyAssignmentFlowPolicy model module.
 * @module model/FlowPolicyAssignmentFlowPolicy
 * @version 2023-06-29
 */
class FlowPolicyAssignmentFlowPolicy {
  /**
   * Constructs a new <code>FlowPolicyAssignmentFlowPolicy</code>.
   * An object that contains details of the flow policy resource.
   * @alias module:model/FlowPolicyAssignmentFlowPolicy
   * @param id {String} A string that specifies the flow policy resource ID associated with the flow policy assignment.
   */
  constructor(id) {
    FlowPolicyAssignmentFlowPolicy.initialize(this, id);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, id) {
    obj['id'] = id;
  }

  /**
   * Constructs a <code>FlowPolicyAssignmentFlowPolicy</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FlowPolicyAssignmentFlowPolicy} obj Optional instance to populate.
   * @return {module:model/FlowPolicyAssignmentFlowPolicy} The populated <code>FlowPolicyAssignmentFlowPolicy</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FlowPolicyAssignmentFlowPolicy();
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>FlowPolicyAssignmentFlowPolicy</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FlowPolicyAssignmentFlowPolicy</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of FlowPolicyAssignmentFlowPolicy.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    return true;
  }
}
FlowPolicyAssignmentFlowPolicy.RequiredProperties = ["id"];

/**
 * A string that specifies the flow policy resource ID associated with the flow policy assignment.
 * @member {String} id
 */
FlowPolicyAssignmentFlowPolicy.prototype['id'] = undefined;
export default FlowPolicyAssignmentFlowPolicy;