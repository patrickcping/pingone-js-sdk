/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumTemplateContentDeliveryMethod from './EnumTemplateContentDeliveryMethod';
import LinksHATEOAS from './LinksHATEOAS';
import TemplateContentCommon from './TemplateContentCommon';

/**
 * The TemplateContentSMS model module.
 * @module model/TemplateContentSMS
 * @version 2023-06-29
 */
class TemplateContentSMS {
  /**
   * Constructs a new <code>TemplateContentSMS</code>.
   * @alias module:model/TemplateContentSMS
   * @implements module:model/TemplateContentCommon
   * @param locale {String} A valid case-insensitive locale, complying with the ISO-639 language code and ISO-3166 country code standards: Two-character language code, for example, \"en\". Two-character language code followed by a two-character country code, separated by an underscore or dash, for example: \"en_GB\", \"en-GB\". Cannot be changed after it is initially set in `POST /environments/{{envID}}/templates/{{templateName}}/contents`. 
   * @param deliveryMethod {module:model/EnumTemplateContentDeliveryMethod} 
   * @param content {String} The SMS text. UC-2 encoding is used for text that contains non GSM-7 characters. UC-2 encoded text cannot exceed 67 characters. GSM-7 encoded text cannot exceed 153 characters. If supported, it can include variables. 
   */
  constructor(locale, deliveryMethod, content) {
    TemplateContentCommon.initialize(this, locale, deliveryMethod);
    TemplateContentSMS.initialize(this, locale, deliveryMethod, content);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, locale, deliveryMethod, content) {
    obj['locale'] = locale;
    obj['deliveryMethod'] = deliveryMethod;
    obj['content'] = content;
  }

  /**
   * Constructs a <code>TemplateContentSMS</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/TemplateContentSMS} obj Optional instance to populate.
   * @return {module:model/TemplateContentSMS} The populated <code>TemplateContentSMS</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new TemplateContentSMS();
      TemplateContentCommon.constructFromObject(data, obj);
      if (data.hasOwnProperty('_links')) {
        obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'String');
      }
      if (data.hasOwnProperty('updatedAt')) {
        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
      }
      if (data.hasOwnProperty('default')) {
        obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
      }
      if (data.hasOwnProperty('locale')) {
        obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
      }
      if (data.hasOwnProperty('deliveryMethod')) {
        obj['deliveryMethod'] = EnumTemplateContentDeliveryMethod.constructFromObject(data['deliveryMethod']);
      }
      if (data.hasOwnProperty('variant')) {
        obj['variant'] = ApiClient.convertToType(data['variant'], 'String');
      }
      if (data.hasOwnProperty('content')) {
        obj['content'] = ApiClient.convertToType(data['content'], 'String');
      }
      if (data.hasOwnProperty('sender')) {
        obj['sender'] = ApiClient.convertToType(data['sender'], 'String');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>TemplateContentSMS</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplateContentSMS</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of TemplateContentSMS.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    // ensure the json data is a string
    if (data['createdAt'] && !(typeof data['createdAt'] === 'string' || data['createdAt'] instanceof String)) {
      throw new Error("Expected the field `createdAt` to be a primitive type in the JSON string but got " + data['createdAt']);
    }
    // ensure the json data is a string
    if (data['updatedAt'] && !(typeof data['updatedAt'] === 'string' || data['updatedAt'] instanceof String)) {
      throw new Error("Expected the field `updatedAt` to be a primitive type in the JSON string but got " + data['updatedAt']);
    }
    // ensure the json data is a string
    if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
      throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
    }
    // ensure the json data is a string
    if (data['variant'] && !(typeof data['variant'] === 'string' || data['variant'] instanceof String)) {
      throw new Error("Expected the field `variant` to be a primitive type in the JSON string but got " + data['variant']);
    }
    // ensure the json data is a string
    if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
      throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
    }
    // ensure the json data is a string
    if (data['sender'] && !(typeof data['sender'] === 'string' || data['sender'] instanceof String)) {
      throw new Error("Expected the field `sender` to be a primitive type in the JSON string but got " + data['sender']);
    }
    return true;
  }
}
TemplateContentSMS.RequiredProperties = ["locale", "deliveryMethod", "content"];

/**
 * @member {module:model/LinksHATEOAS} _links
 */
TemplateContentSMS.prototype['_links'] = undefined;

/**
 * The template id.
 * @member {String} id
 */
TemplateContentSMS.prototype['id'] = undefined;

/**
 * The time the resource was created.
 * @member {String} createdAt
 */
TemplateContentSMS.prototype['createdAt'] = undefined;

/**
 * The time the resource was last updated.
 * @member {String} updatedAt
 */
TemplateContentSMS.prototype['updatedAt'] = undefined;

/**
 * Specifies whether the template is a predefined default template.
 * @member {Boolean} default
 */
TemplateContentSMS.prototype['default'] = undefined;

/**
 * A valid case-insensitive locale, complying with the ISO-639 language code and ISO-3166 country code standards: Two-character language code, for example, \"en\". Two-character language code followed by a two-character country code, separated by an underscore or dash, for example: \"en_GB\", \"en-GB\". Cannot be changed after it is initially set in `POST /environments/{{envID}}/templates/{{templateName}}/contents`. 
 * @member {String} locale
 */
TemplateContentSMS.prototype['locale'] = undefined;

/**
 * @member {module:model/EnumTemplateContentDeliveryMethod} deliveryMethod
 */
TemplateContentSMS.prototype['deliveryMethod'] = undefined;

/**
 * Holds the unique user-defined name for each content variant that uses the same template + `deliveryMethod` + `locale` combination. This property is case insensitive and has a limit of 100 characters. For more information, see [Creating custom contents](https://apidocs.pingidentity.com/pingone/platform/v1/api/#notifications-templates-creating-custom-contents).
 * @member {String} variant
 */
TemplateContentSMS.prototype['variant'] = undefined;

/**
 * The SMS text. UC-2 encoding is used for text that contains non GSM-7 characters. UC-2 encoded text cannot exceed 67 characters. GSM-7 encoded text cannot exceed 153 characters. If supported, it can include variables. 
 * @member {String} content
 */
TemplateContentSMS.prototype['content'] = undefined;

/**
 * The SMS sender ID. This property can contain only alphanumeric characters and spaces, and its length cannot exceed 11 characters. In some countries, it is impossible to send an SMS with an alphanumeric sender ID. For those countries, the sender ID must be empty. For SMS recipients in specific countries, refer to Twilio's documentation on [International support for Alphanumeric Sender ID](https://support.twilio.com/hc/en-us/articles/223133767-International-support-for-Alphanumeric-Sender-ID).
 * @member {String} sender
 */
TemplateContentSMS.prototype['sender'] = undefined;

// Implement TemplateContentCommon interface:
/**
 * @member {module:model/LinksHATEOAS} _links
 */
TemplateContentCommon.prototype['_links'] = undefined;
/**
 * The template id.
 * @member {String} id
 */
TemplateContentCommon.prototype['id'] = undefined;
/**
 * The time the resource was created.
 * @member {String} createdAt
 */
TemplateContentCommon.prototype['createdAt'] = undefined;
/**
 * The time the resource was last updated.
 * @member {String} updatedAt
 */
TemplateContentCommon.prototype['updatedAt'] = undefined;
/**
 * Specifies whether the template is a predefined default template.
 * @member {Boolean} default
 */
TemplateContentCommon.prototype['default'] = undefined;
/**
 * A valid case-insensitive locale, complying with the ISO-639 language code and ISO-3166 country code standards: Two-character language code, for example, \"en\". Two-character language code followed by a two-character country code, separated by an underscore or dash, for example: \"en_GB\", \"en-GB\". Cannot be changed after it is initially set in `POST /environments/{{envID}}/templates/{{templateName}}/contents`. 
 * @member {String} locale
 */
TemplateContentCommon.prototype['locale'] = undefined;
/**
 * @member {module:model/EnumTemplateContentDeliveryMethod} deliveryMethod
 */
TemplateContentCommon.prototype['deliveryMethod'] = undefined;
/**
 * Holds the unique user-defined name for each content variant that uses the same template + `deliveryMethod` + `locale` combination. This property is case insensitive and has a limit of 100 characters. For more information, see [Creating custom contents](https://apidocs.pingidentity.com/pingone/platform/v1/api/#notifications-templates-creating-custom-contents).
 * @member {String} variant
 */
TemplateContentCommon.prototype['variant'] = undefined;
export default TemplateContentSMS;