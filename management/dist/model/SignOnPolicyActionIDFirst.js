/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumSignOnPolicyType from './EnumSignOnPolicyType';
import LinksHATEOAS from './LinksHATEOAS';
import ObjectEnvironment from './ObjectEnvironment';
import SignOnPolicyActionCommon from './SignOnPolicyActionCommon';
import SignOnPolicyActionCommonConditionOrOrInner from './SignOnPolicyActionCommonConditionOrOrInner';
import SignOnPolicyActionCommonSignOnPolicy from './SignOnPolicyActionCommonSignOnPolicy';
import SignOnPolicyActionIDFirstAllOfDiscoveryRules from './SignOnPolicyActionIDFirstAllOfDiscoveryRules';
import SignOnPolicyActionLoginAllOfRecovery from './SignOnPolicyActionLoginAllOfRecovery';
import SignOnPolicyActionLoginAllOfRegistration from './SignOnPolicyActionLoginAllOfRegistration';
import SignOnPolicyActionLoginAllOfSocialProviders from './SignOnPolicyActionLoginAllOfSocialProviders';

/**
 * The SignOnPolicyActionIDFirst model module.
 * @module model/SignOnPolicyActionIDFirst
 * @version 2023-06-29
 */
class SignOnPolicyActionIDFirst {
  /**
   * Constructs a new <code>SignOnPolicyActionIDFirst</code>.
   * @alias module:model/SignOnPolicyActionIDFirst
   * @implements module:model/SignOnPolicyActionCommon
   * @param priority {Number} An integer that specifies the order in which the policy referenced by this assignment is evaluated during an authentication flow relative to other policies. An assignment with a lower priority will be evaluated first. This is a required property.
   * @param type {module:model/EnumSignOnPolicyType} 
   */
  constructor(priority, type) {
    SignOnPolicyActionCommon.initialize(this, priority, type);
    SignOnPolicyActionIDFirst.initialize(this, priority, type);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, priority, type) {
    obj['priority'] = priority;
    obj['type'] = type;
  }

  /**
   * Constructs a <code>SignOnPolicyActionIDFirst</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SignOnPolicyActionIDFirst} obj Optional instance to populate.
   * @return {module:model/SignOnPolicyActionIDFirst} The populated <code>SignOnPolicyActionIDFirst</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SignOnPolicyActionIDFirst();
      SignOnPolicyActionCommon.constructFromObject(data, obj);
      if (data.hasOwnProperty('_links')) {
        obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
      }
      if (data.hasOwnProperty('condition')) {
        obj['condition'] = SignOnPolicyActionCommonConditionOrOrInner.constructFromObject(data['condition']);
      }
      if (data.hasOwnProperty('environment')) {
        obj['environment'] = ObjectEnvironment.constructFromObject(data['environment']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('priority')) {
        obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
      }
      if (data.hasOwnProperty('signOnPolicy')) {
        obj['signOnPolicy'] = SignOnPolicyActionCommonSignOnPolicy.constructFromObject(data['signOnPolicy']);
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = EnumSignOnPolicyType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('discoveryRules')) {
        obj['discoveryRules'] = ApiClient.convertToType(data['discoveryRules'], [SignOnPolicyActionIDFirstAllOfDiscoveryRules]);
      }
      if (data.hasOwnProperty('enforceLockoutForIdentityProviders')) {
        obj['enforceLockoutForIdentityProviders'] = ApiClient.convertToType(data['enforceLockoutForIdentityProviders'], 'Boolean');
      }
      if (data.hasOwnProperty('recovery')) {
        obj['recovery'] = SignOnPolicyActionLoginAllOfRecovery.constructFromObject(data['recovery']);
      }
      if (data.hasOwnProperty('registration')) {
        obj['registration'] = SignOnPolicyActionLoginAllOfRegistration.constructFromObject(data['registration']);
      }
      if (data.hasOwnProperty('socialProviders')) {
        obj['socialProviders'] = ApiClient.convertToType(data['socialProviders'], [SignOnPolicyActionLoginAllOfSocialProviders]);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>SignOnPolicyActionIDFirst</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SignOnPolicyActionIDFirst</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of SignOnPolicyActionIDFirst.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // validate the optional field `condition`
    if (data['condition']) {
      // data not null
      SignOnPolicyActionCommonConditionOrOrInner.validateJSON(data['condition']);
    }
    // validate the optional field `environment`
    if (data['environment']) {
      // data not null
      ObjectEnvironment.validateJSON(data['environment']);
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    // validate the optional field `signOnPolicy`
    if (data['signOnPolicy']) {
      // data not null
      SignOnPolicyActionCommonSignOnPolicy.validateJSON(data['signOnPolicy']);
    }
    if (data['discoveryRules']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['discoveryRules'])) {
        throw new Error("Expected the field `discoveryRules` to be an array in the JSON data but got " + data['discoveryRules']);
      }
      // validate the optional field `discoveryRules` (array)
      for (const item of data['discoveryRules']) {
        SignOnPolicyActionIDFirstAllOfDiscoveryRules.validateJSON(item);
      }
      ;
    }
    // validate the optional field `recovery`
    if (data['recovery']) {
      // data not null
      SignOnPolicyActionLoginAllOfRecovery.validateJSON(data['recovery']);
    }
    // validate the optional field `registration`
    if (data['registration']) {
      // data not null
      SignOnPolicyActionLoginAllOfRegistration.validateJSON(data['registration']);
    }
    if (data['socialProviders']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['socialProviders'])) {
        throw new Error("Expected the field `socialProviders` to be an array in the JSON data but got " + data['socialProviders']);
      }
      // validate the optional field `socialProviders` (array)
      for (const item of data['socialProviders']) {
        SignOnPolicyActionLoginAllOfSocialProviders.validateJSON(item);
      }
      ;
    }
    return true;
  }
}
SignOnPolicyActionIDFirst.RequiredProperties = ["priority", "type"];

/**
 * @member {module:model/LinksHATEOAS} _links
 */
SignOnPolicyActionIDFirst.prototype['_links'] = undefined;

/**
 * @member {module:model/SignOnPolicyActionCommonConditionOrOrInner} condition
 */
SignOnPolicyActionIDFirst.prototype['condition'] = undefined;

/**
 * @member {module:model/ObjectEnvironment} environment
 */
SignOnPolicyActionIDFirst.prototype['environment'] = undefined;

/**
 * A string that specifies the sign-on policy assignment resourceâ€™s unique identifier.
 * @member {String} id
 */
SignOnPolicyActionIDFirst.prototype['id'] = undefined;

/**
 * An integer that specifies the order in which the policy referenced by this assignment is evaluated during an authentication flow relative to other policies. An assignment with a lower priority will be evaluated first. This is a required property.
 * @member {Number} priority
 */
SignOnPolicyActionIDFirst.prototype['priority'] = undefined;

/**
 * @member {module:model/SignOnPolicyActionCommonSignOnPolicy} signOnPolicy
 */
SignOnPolicyActionIDFirst.prototype['signOnPolicy'] = undefined;

/**
 * @member {module:model/EnumSignOnPolicyType} type
 */
SignOnPolicyActionIDFirst.prototype['type'] = undefined;

/**
 * The list of IDP discovery rules that are evaluated in order when no user is associated with the user identifier. The maximum number of rules is 100. The condition on which this identity provider is used to authenticate the user is expressed using the PingOne policy condition language
 * @member {Array.<module:model/SignOnPolicyActionIDFirstAllOfDiscoveryRules>} discoveryRules
 */
SignOnPolicyActionIDFirst.prototype['discoveryRules'] = undefined;

/**
 * A boolean that if set to true and if the user's account is locked (the account.canAuthenticate attribute is set to false), then social sign on with an external identity provider is prevented.
 * @member {Boolean} enforceLockoutForIdentityProviders
 */
SignOnPolicyActionIDFirst.prototype['enforceLockoutForIdentityProviders'] = undefined;

/**
 * @member {module:model/SignOnPolicyActionLoginAllOfRecovery} recovery
 */
SignOnPolicyActionIDFirst.prototype['recovery'] = undefined;

/**
 * @member {module:model/SignOnPolicyActionLoginAllOfRegistration} registration
 */
SignOnPolicyActionIDFirst.prototype['registration'] = undefined;

/**
 * An array of strings that specifies the IDs of the identity providers that can be used for the social login sign-on flow.
 * @member {Array.<module:model/SignOnPolicyActionLoginAllOfSocialProviders>} socialProviders
 */
SignOnPolicyActionIDFirst.prototype['socialProviders'] = undefined;

// Implement SignOnPolicyActionCommon interface:
/**
 * @member {module:model/LinksHATEOAS} _links
 */
SignOnPolicyActionCommon.prototype['_links'] = undefined;
/**
 * @member {module:model/SignOnPolicyActionCommonConditionOrOrInner} condition
 */
SignOnPolicyActionCommon.prototype['condition'] = undefined;
/**
 * @member {module:model/ObjectEnvironment} environment
 */
SignOnPolicyActionCommon.prototype['environment'] = undefined;
/**
 * A string that specifies the sign-on policy assignment resourceâ€™s unique identifier.
 * @member {String} id
 */
SignOnPolicyActionCommon.prototype['id'] = undefined;
/**
 * An integer that specifies the order in which the policy referenced by this assignment is evaluated during an authentication flow relative to other policies. An assignment with a lower priority will be evaluated first. This is a required property.
 * @member {Number} priority
 */
SignOnPolicyActionCommon.prototype['priority'] = undefined;
/**
 * @member {module:model/SignOnPolicyActionCommonSignOnPolicy} signOnPolicy
 */
SignOnPolicyActionCommon.prototype['signOnPolicy'] = undefined;
/**
 * @member {module:model/EnumSignOnPolicyType} type
 */
SignOnPolicyActionCommon.prototype['type'] = undefined;
export default SignOnPolicyActionIDFirst;