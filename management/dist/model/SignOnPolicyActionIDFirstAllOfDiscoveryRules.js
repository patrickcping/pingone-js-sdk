/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SignOnPolicyActionIDFirstAllOfCondition from './SignOnPolicyActionIDFirstAllOfCondition';
import SignOnPolicyActionIDFirstAllOfIdentityProvider from './SignOnPolicyActionIDFirstAllOfIdentityProvider';

/**
 * The SignOnPolicyActionIDFirstAllOfDiscoveryRules model module.
 * @module model/SignOnPolicyActionIDFirstAllOfDiscoveryRules
 * @version 2023-06-29
 */
class SignOnPolicyActionIDFirstAllOfDiscoveryRules {
  /**
   * Constructs a new <code>SignOnPolicyActionIDFirstAllOfDiscoveryRules</code>.
   * @alias module:model/SignOnPolicyActionIDFirstAllOfDiscoveryRules
   * @param condition {module:model/SignOnPolicyActionIDFirstAllOfCondition} 
   * @param identityProvider {module:model/SignOnPolicyActionIDFirstAllOfIdentityProvider} 
   */
  constructor(condition, identityProvider) {
    SignOnPolicyActionIDFirstAllOfDiscoveryRules.initialize(this, condition, identityProvider);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, condition, identityProvider) {
    obj['condition'] = condition;
    obj['identityProvider'] = identityProvider;
  }

  /**
   * Constructs a <code>SignOnPolicyActionIDFirstAllOfDiscoveryRules</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/SignOnPolicyActionIDFirstAllOfDiscoveryRules} obj Optional instance to populate.
   * @return {module:model/SignOnPolicyActionIDFirstAllOfDiscoveryRules} The populated <code>SignOnPolicyActionIDFirstAllOfDiscoveryRules</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new SignOnPolicyActionIDFirstAllOfDiscoveryRules();
      if (data.hasOwnProperty('condition')) {
        obj['condition'] = SignOnPolicyActionIDFirstAllOfCondition.constructFromObject(data['condition']);
      }
      if (data.hasOwnProperty('identityProvider')) {
        obj['identityProvider'] = SignOnPolicyActionIDFirstAllOfIdentityProvider.constructFromObject(data['identityProvider']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>SignOnPolicyActionIDFirstAllOfDiscoveryRules</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SignOnPolicyActionIDFirstAllOfDiscoveryRules</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of SignOnPolicyActionIDFirstAllOfDiscoveryRules.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // validate the optional field `condition`
    if (data['condition']) {
      // data not null
      SignOnPolicyActionIDFirstAllOfCondition.validateJSON(data['condition']);
    }
    // validate the optional field `identityProvider`
    if (data['identityProvider']) {
      // data not null
      SignOnPolicyActionIDFirstAllOfIdentityProvider.validateJSON(data['identityProvider']);
    }
    return true;
  }
}
SignOnPolicyActionIDFirstAllOfDiscoveryRules.RequiredProperties = ["condition", "identityProvider"];

/**
 * @member {module:model/SignOnPolicyActionIDFirstAllOfCondition} condition
 */
SignOnPolicyActionIDFirstAllOfDiscoveryRules.prototype['condition'] = undefined;

/**
 * @member {module:model/SignOnPolicyActionIDFirstAllOfIdentityProvider} identityProvider
 */
SignOnPolicyActionIDFirstAllOfDiscoveryRules.prototype['identityProvider'] = undefined;
export default SignOnPolicyActionIDFirstAllOfDiscoveryRules;