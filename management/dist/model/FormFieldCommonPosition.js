/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FormFieldCommonPosition model module.
 * @module model/FormFieldCommonPosition
 * @version 2023-06-29
 */
class FormFieldCommonPosition {
  /**
   * Constructs a new <code>FormFieldCommonPosition</code>.
   * @alias module:model/FormFieldCommonPosition
   * @param row {Number} An integer that specifies the number of rows (maximum number is 50).
   * @param col {Number} An integer that specifies the number of columns (min = 0; max = 4).
   */
  constructor(row, col) {
    FormFieldCommonPosition.initialize(this, row, col);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, row, col) {
    obj['row'] = row;
    obj['col'] = col;
  }

  /**
   * Constructs a <code>FormFieldCommonPosition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FormFieldCommonPosition} obj Optional instance to populate.
   * @return {module:model/FormFieldCommonPosition} The populated <code>FormFieldCommonPosition</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new FormFieldCommonPosition();
      if (data.hasOwnProperty('row')) {
        obj['row'] = ApiClient.convertToType(data['row'], 'Number');
      }
      if (data.hasOwnProperty('col')) {
        obj['col'] = ApiClient.convertToType(data['col'], 'Number');
      }
      if (data.hasOwnProperty('width')) {
        obj['width'] = ApiClient.convertToType(data['width'], 'Number');
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>FormFieldCommonPosition</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FormFieldCommonPosition</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of FormFieldCommonPosition.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    return true;
  }
}
FormFieldCommonPosition.RequiredProperties = ["row", "col"];

/**
 * An integer that specifies the number of rows (maximum number is 50).
 * @member {Number} row
 */
FormFieldCommonPosition.prototype['row'] = undefined;

/**
 * An integer that specifies the number of columns (min = 0; max = 4).
 * @member {Number} col
 */
FormFieldCommonPosition.prototype['col'] = undefined;

/**
 * An integer that specifies the width of the field (in percentage).
 * @member {Number} width
 */
FormFieldCommonPosition.prototype['width'] = undefined;
export default FormFieldCommonPosition;