/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumIdentityProviderSAMLSigningAlgorithm from './EnumIdentityProviderSAMLSigningAlgorithm';
import IdentityProviderSAMLAllOfSpSigningKey from './IdentityProviderSAMLAllOfSpSigningKey';

/**
 * The IdentityProviderSAMLAllOfSpSigning model module.
 * @module model/IdentityProviderSAMLAllOfSpSigning
 * @version 2023-06-29
 */
class IdentityProviderSAMLAllOfSpSigning {
  /**
   * Constructs a new <code>IdentityProviderSAMLAllOfSpSigning</code>.
   * @alias module:model/IdentityProviderSAMLAllOfSpSigning
   * @param key {module:model/IdentityProviderSAMLAllOfSpSigningKey} 
   */
  constructor(key) {
    IdentityProviderSAMLAllOfSpSigning.initialize(this, key);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, key) {
    obj['key'] = key;
  }

  /**
   * Constructs a <code>IdentityProviderSAMLAllOfSpSigning</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/IdentityProviderSAMLAllOfSpSigning} obj Optional instance to populate.
   * @return {module:model/IdentityProviderSAMLAllOfSpSigning} The populated <code>IdentityProviderSAMLAllOfSpSigning</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new IdentityProviderSAMLAllOfSpSigning();
      if (data.hasOwnProperty('algorithm')) {
        obj['algorithm'] = EnumIdentityProviderSAMLSigningAlgorithm.constructFromObject(data['algorithm']);
      }
      if (data.hasOwnProperty('key')) {
        obj['key'] = IdentityProviderSAMLAllOfSpSigningKey.constructFromObject(data['key']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>IdentityProviderSAMLAllOfSpSigning</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IdentityProviderSAMLAllOfSpSigning</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of IdentityProviderSAMLAllOfSpSigning.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // validate the optional field `key`
    if (data['key']) {
      // data not null
      IdentityProviderSAMLAllOfSpSigningKey.validateJSON(data['key']);
    }
    return true;
  }
}
IdentityProviderSAMLAllOfSpSigning.RequiredProperties = ["key"];

/**
 * @member {module:model/EnumIdentityProviderSAMLSigningAlgorithm} algorithm
 */
IdentityProviderSAMLAllOfSpSigning.prototype['algorithm'] = undefined;

/**
 * @member {module:model/IdentityProviderSAMLAllOfSpSigningKey} key
 */
IdentityProviderSAMLAllOfSpSigning.prototype['key'] = undefined;
export default IdentityProviderSAMLAllOfSpSigning;