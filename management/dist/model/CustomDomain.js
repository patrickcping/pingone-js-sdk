/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomDomainCertificate from './CustomDomainCertificate';
import EnumCustomDomainStatus from './EnumCustomDomainStatus';
import LinksHATEOAS from './LinksHATEOAS';
import ObjectEnvironment from './ObjectEnvironment';

/**
 * The CustomDomain model module.
 * @module model/CustomDomain
 * @version 2023-06-29
 */
class CustomDomain {
  /**
   * Constructs a new <code>CustomDomain</code>.
   * @alias module:model/CustomDomain
   * @param domainName {String} A string that specifies the resource name, which must be provided and must be unique within an environment (for example, auth.shopco.com). This is a required property.
   */
  constructor(domainName) {
    CustomDomain.initialize(this, domainName);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, domainName) {
    obj['domainName'] = domainName;
  }

  /**
   * Constructs a <code>CustomDomain</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CustomDomain} obj Optional instance to populate.
   * @return {module:model/CustomDomain} The populated <code>CustomDomain</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new CustomDomain();
      if (data.hasOwnProperty('_links')) {
        obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
      }
      if (data.hasOwnProperty('certificate')) {
        obj['certificate'] = CustomDomainCertificate.constructFromObject(data['certificate']);
      }
      if (data.hasOwnProperty('canonicalName')) {
        obj['canonicalName'] = ApiClient.convertToType(data['canonicalName'], 'String');
      }
      if (data.hasOwnProperty('domainName')) {
        obj['domainName'] = ApiClient.convertToType(data['domainName'], 'String');
      }
      if (data.hasOwnProperty('environment')) {
        obj['environment'] = ObjectEnvironment.constructFromObject(data['environment']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = EnumCustomDomainStatus.constructFromObject(data['status']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>CustomDomain</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomDomain</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of CustomDomain.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // validate the optional field `certificate`
    if (data['certificate']) {
      // data not null
      CustomDomainCertificate.validateJSON(data['certificate']);
    }
    // ensure the json data is a string
    if (data['canonicalName'] && !(typeof data['canonicalName'] === 'string' || data['canonicalName'] instanceof String)) {
      throw new Error("Expected the field `canonicalName` to be a primitive type in the JSON string but got " + data['canonicalName']);
    }
    // ensure the json data is a string
    if (data['domainName'] && !(typeof data['domainName'] === 'string' || data['domainName'] instanceof String)) {
      throw new Error("Expected the field `domainName` to be a primitive type in the JSON string but got " + data['domainName']);
    }
    // validate the optional field `environment`
    if (data['environment']) {
      // data not null
      ObjectEnvironment.validateJSON(data['environment']);
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    return true;
  }
}
CustomDomain.RequiredProperties = ["domainName"];

/**
 * @member {module:model/LinksHATEOAS} _links
 */
CustomDomain.prototype['_links'] = undefined;

/**
 * @member {module:model/CustomDomainCertificate} certificate
 */
CustomDomain.prototype['certificate'] = undefined;

/**
 * A string that specifies the domain name that should be used as the value of the CNAME record in the customer’s DNS.
 * @member {String} canonicalName
 */
CustomDomain.prototype['canonicalName'] = undefined;

/**
 * A string that specifies the resource name, which must be provided and must be unique within an environment (for example, auth.shopco.com). This is a required property.
 * @member {String} domainName
 */
CustomDomain.prototype['domainName'] = undefined;

/**
 * @member {module:model/ObjectEnvironment} environment
 */
CustomDomain.prototype['environment'] = undefined;

/**
 * A string that specifies the resource’s unique identifier.
 * @member {String} id
 */
CustomDomain.prototype['id'] = undefined;

/**
 * @member {module:model/EnumCustomDomainStatus} status
 */
CustomDomain.prototype['status'] = undefined;
export default CustomDomain;