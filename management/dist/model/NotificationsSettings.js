/**
 * PingOne Platform API - SSO and Base
 * The PingOne Platform API covering the base and SSO services (otherwise known as the Management APIs)
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumNotificationsSettingsDeliveryMode from './EnumNotificationsSettingsDeliveryMode';
import LinksHATEOAS from './LinksHATEOAS';
import NotificationsSettingsFrom from './NotificationsSettingsFrom';
import NotificationsSettingsReplyTo from './NotificationsSettingsReplyTo';
import NotificationsSettingsRestrictions from './NotificationsSettingsRestrictions';
import NotificationsSettingsWhitelistInner from './NotificationsSettingsWhitelistInner';
import ObjectEnvironment from './ObjectEnvironment';

/**
 * The NotificationsSettings model module.
 * @module model/NotificationsSettings
 * @version 2023-06-29
 */
class NotificationsSettings {
  /**
   * Constructs a new <code>NotificationsSettings</code>.
   * @alias module:model/NotificationsSettings
   */
  constructor() {
    NotificationsSettings.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj) {}

  /**
   * Constructs a <code>NotificationsSettings</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/NotificationsSettings} obj Optional instance to populate.
   * @return {module:model/NotificationsSettings} The populated <code>NotificationsSettings</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new NotificationsSettings();
      if (data.hasOwnProperty('_links')) {
        obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
      }
      if (data.hasOwnProperty('updatedAt')) {
        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
      }
      if (data.hasOwnProperty('environment')) {
        obj['environment'] = ObjectEnvironment.constructFromObject(data['environment']);
      }
      if (data.hasOwnProperty('deliveryMode')) {
        obj['deliveryMode'] = EnumNotificationsSettingsDeliveryMode.constructFromObject(data['deliveryMode']);
      }
      if (data.hasOwnProperty('restrictions')) {
        obj['restrictions'] = NotificationsSettingsRestrictions.constructFromObject(data['restrictions']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('smsProvidersFallbackChain')) {
        obj['smsProvidersFallbackChain'] = ApiClient.convertToType(data['smsProvidersFallbackChain'], ['String']);
      }
      if (data.hasOwnProperty('from')) {
        obj['from'] = NotificationsSettingsFrom.constructFromObject(data['from']);
      }
      if (data.hasOwnProperty('replyTo')) {
        obj['replyTo'] = NotificationsSettingsReplyTo.constructFromObject(data['replyTo']);
      }
      if (data.hasOwnProperty('whitelist')) {
        obj['whitelist'] = ApiClient.convertToType(data['whitelist'], [NotificationsSettingsWhitelistInner]);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>NotificationsSettings</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationsSettings</code>.
   */
  static validateJSON(data) {
    // validate the optional field `environment`
    if (data['environment']) {
      // data not null
      ObjectEnvironment.validateJSON(data['environment']);
    }
    // validate the optional field `restrictions`
    if (data['restrictions']) {
      // data not null
      NotificationsSettingsRestrictions.validateJSON(data['restrictions']);
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    // ensure the json data is an array
    if (!Array.isArray(data['smsProvidersFallbackChain'])) {
      throw new Error("Expected the field `smsProvidersFallbackChain` to be an array in the JSON data but got " + data['smsProvidersFallbackChain']);
    }
    // validate the optional field `from`
    if (data['from']) {
      // data not null
      NotificationsSettingsFrom.validateJSON(data['from']);
    }
    // validate the optional field `replyTo`
    if (data['replyTo']) {
      // data not null
      NotificationsSettingsReplyTo.validateJSON(data['replyTo']);
    }
    if (data['whitelist']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['whitelist'])) {
        throw new Error("Expected the field `whitelist` to be an array in the JSON data but got " + data['whitelist']);
      }
      // validate the optional field `whitelist` (array)
      for (const item of data['whitelist']) {
        NotificationsSettingsWhitelistInner.validateJSON(item);
      }
      ;
    }
    return true;
  }
}

/**
 * @member {module:model/LinksHATEOAS} _links
 */
NotificationsSettings.prototype['_links'] = undefined;

/**
 * The time the resource was last updated.
 * @member {Date} updatedAt
 */
NotificationsSettings.prototype['updatedAt'] = undefined;

/**
 * @member {module:model/ObjectEnvironment} environment
 */
NotificationsSettings.prototype['environment'] = undefined;

/**
 * @member {module:model/EnumNotificationsSettingsDeliveryMode} deliveryMode
 */
NotificationsSettings.prototype['deliveryMode'] = undefined;

/**
 * @member {module:model/NotificationsSettingsRestrictions} restrictions
 */
NotificationsSettings.prototype['restrictions'] = undefined;

/**
 * A string that specifies the resource’s unique identifier.
 * @member {String} id
 */
NotificationsSettings.prototype['id'] = undefined;

/**
 * A list which represents the execution order of different SMS/Voice providers configured for the environment. The providers and their accounts’ configurations are represented in the list by the ID of the corresponding `PhoneDeliverySettings` resource. The only provider which is not represented by a `phoneDeliverySettingsID` is the PingOne Twilio provider. The PingOne Twilio provider is represented by the `PINGONE_TWILIO` string. If the `smsProvidersFallbackChain` list is empty, an SMS or voice message will be sent using the default Ping Twilio account. Otherwise, an SMS or voice message will be sent using the first provider in the list. If the server fails to queue the message using that provider, it will use the next provider in the list to try to send the message. This process will go on until there are no more providers in the list. If the server failed to send the message using all providers, the notification status is set to `FAILED`.
 * @member {Array.<String>} smsProvidersFallbackChain
 */
NotificationsSettings.prototype['smsProvidersFallbackChain'] = undefined;

/**
 * @member {module:model/NotificationsSettingsFrom} from
 */
NotificationsSettings.prototype['from'] = undefined;

/**
 * @member {module:model/NotificationsSettingsReplyTo} replyTo
 */
NotificationsSettings.prototype['replyTo'] = undefined;

/**
 * @member {Array.<module:model/NotificationsSettingsWhitelistInner>} whitelist
 */
NotificationsSettings.prototype['whitelist'] = undefined;
export default NotificationsSettings;