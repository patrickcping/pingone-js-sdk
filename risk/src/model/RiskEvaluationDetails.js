/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RiskEvaluationDetailsIpAddressReputation from './RiskEvaluationDetailsIpAddressReputation';
import RiskEvaluationDetailsIpVelocityByUser from './RiskEvaluationDetailsIpVelocityByUser';
import RiskEvaluationDetailsPreviousSuccessfulTransaction from './RiskEvaluationDetailsPreviousSuccessfulTransaction';
import RiskEvaluationDetailsUserBasedRiskBehavior from './RiskEvaluationDetailsUserBasedRiskBehavior';
import RiskEvaluationDetailsUserRiskBehavior from './RiskEvaluationDetailsUserRiskBehavior';
import RiskEvaluationDetailsUserVelocityByIp from './RiskEvaluationDetailsUserVelocityByIp';

/**
 * The RiskEvaluationDetails model module.
 * @module model/RiskEvaluationDetails
 * @version 2023-06-29
 */
class RiskEvaluationDetails {
    /**
     * Constructs a new <code>RiskEvaluationDetails</code>.
     * @alias module:model/RiskEvaluationDetails
     */
    constructor() { 
        
        RiskEvaluationDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RiskEvaluationDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskEvaluationDetails} obj Optional instance to populate.
     * @return {module:model/RiskEvaluationDetails} The populated <code>RiskEvaluationDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskEvaluationDetails();

            if (data.hasOwnProperty('ipAddressReputation')) {
                obj['ipAddressReputation'] = RiskEvaluationDetailsIpAddressReputation.constructFromObject(data['ipAddressReputation']);
            }
            if (data.hasOwnProperty('ipVelocityByUser')) {
                obj['ipVelocityByUser'] = RiskEvaluationDetailsIpVelocityByUser.constructFromObject(data['ipVelocityByUser']);
            }
            if (data.hasOwnProperty('userVelocityByIp')) {
                obj['userVelocityByIp'] = RiskEvaluationDetailsUserVelocityByIp.constructFromObject(data['userVelocityByIp']);
            }
            if (data.hasOwnProperty('impossibleTravel')) {
                obj['impossibleTravel'] = ApiClient.convertToType(data['impossibleTravel'], 'Boolean');
            }
            if (data.hasOwnProperty('estimatedSpeed')) {
                obj['estimatedSpeed'] = ApiClient.convertToType(data['estimatedSpeed'], 'Number');
            }
            if (data.hasOwnProperty('anonymousNetworkDetected')) {
                obj['anonymousNetworkDetected'] = ApiClient.convertToType(data['anonymousNetworkDetected'], 'Boolean');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('previousSuccessfulTransaction')) {
                obj['previousSuccessfulTransaction'] = RiskEvaluationDetailsPreviousSuccessfulTransaction.constructFromObject(data['previousSuccessfulTransaction']);
            }
            if (data.hasOwnProperty('userBasedRiskBehavior')) {
                obj['userBasedRiskBehavior'] = RiskEvaluationDetailsUserBasedRiskBehavior.constructFromObject(data['userBasedRiskBehavior']);
            }
            if (data.hasOwnProperty('userRiskBehavior')) {
                obj['userRiskBehavior'] = RiskEvaluationDetailsUserRiskBehavior.constructFromObject(data['userRiskBehavior']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskEvaluationDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskEvaluationDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `ipAddressReputation`
        if (data['ipAddressReputation']) { // data not null
          RiskEvaluationDetailsIpAddressReputation.validateJSON(data['ipAddressReputation']);
        }
        // validate the optional field `ipVelocityByUser`
        if (data['ipVelocityByUser']) { // data not null
          RiskEvaluationDetailsIpVelocityByUser.validateJSON(data['ipVelocityByUser']);
        }
        // validate the optional field `userVelocityByIp`
        if (data['userVelocityByIp']) { // data not null
          RiskEvaluationDetailsUserVelocityByIp.validateJSON(data['userVelocityByIp']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // validate the optional field `previousSuccessfulTransaction`
        if (data['previousSuccessfulTransaction']) { // data not null
          RiskEvaluationDetailsPreviousSuccessfulTransaction.validateJSON(data['previousSuccessfulTransaction']);
        }
        // validate the optional field `userBasedRiskBehavior`
        if (data['userBasedRiskBehavior']) { // data not null
          RiskEvaluationDetailsUserBasedRiskBehavior.validateJSON(data['userBasedRiskBehavior']);
        }
        // validate the optional field `userRiskBehavior`
        if (data['userRiskBehavior']) { // data not null
          RiskEvaluationDetailsUserRiskBehavior.validateJSON(data['userRiskBehavior']);
        }

        return true;
    }


}



/**
 * @member {module:model/RiskEvaluationDetailsIpAddressReputation} ipAddressReputation
 */
RiskEvaluationDetails.prototype['ipAddressReputation'] = undefined;

/**
 * @member {module:model/RiskEvaluationDetailsIpVelocityByUser} ipVelocityByUser
 */
RiskEvaluationDetails.prototype['ipVelocityByUser'] = undefined;

/**
 * @member {module:model/RiskEvaluationDetailsUserVelocityByIp} userVelocityByIp
 */
RiskEvaluationDetails.prototype['userVelocityByIp'] = undefined;

/**
 * A boolean that specifies whether the distance between the location of the user in their previous successful authentication and current authentication infers that the user had to travel at a speed greater than 1000 kilometers per hour. This condition is marked as fulfilled, only if: Location data is available for the current and previous IP address of the user. This is not the first transaction that the user has performed. The userâ€™s previous successful transaction was performed less than 24 hours ago. The user moved a distance of at least 100 kilometers. Thus, even if the user moved very fast, but moved only a distance of 90 kilometers, the condition is not fulfilled. The user moved at a speed greater than 1000 kilometers per hour.
 * @member {Boolean} impossibleTravel
 */
RiskEvaluationDetails.prototype['impossibleTravel'] = undefined;

/**
 * The calculated travel speed in units of kilometers per hour.
 * @member {Number} estimatedSpeed
 */
RiskEvaluationDetails.prototype['estimatedSpeed'] = undefined;

/**
 * A boolean that specifies whether the current authentication originated from an anonymous network (for example, proxy or VPN).
 * @member {Boolean} anonymousNetworkDetected
 */
RiskEvaluationDetails.prototype['anonymousNetworkDetected'] = undefined;

/**
 * A string that specifies the country related to current transaction from the IP address.
 * @member {String} country
 */
RiskEvaluationDetails.prototype['country'] = undefined;

/**
 * A string that specifies the state related to current transaction from the IP address.
 * @member {String} state
 */
RiskEvaluationDetails.prototype['state'] = undefined;

/**
 * A string that specifies the city related to current transaction from the IP address.
 * @member {String} city
 */
RiskEvaluationDetails.prototype['city'] = undefined;

/**
 * A double-precision floating point that specifies the longitude related to current transaction from the IP address. Values range from -90 to 90.
 * @member {Number} longitude
 */
RiskEvaluationDetails.prototype['longitude'] = undefined;

/**
 * A double-precision floating point that specifies the latitude related to current transaction from the IP address. Values range from -180 to 180.
 * @member {Number} latitude
 */
RiskEvaluationDetails.prototype['latitude'] = undefined;

/**
 * @member {module:model/RiskEvaluationDetailsPreviousSuccessfulTransaction} previousSuccessfulTransaction
 */
RiskEvaluationDetails.prototype['previousSuccessfulTransaction'] = undefined;

/**
 * @member {module:model/RiskEvaluationDetailsUserBasedRiskBehavior} userBasedRiskBehavior
 */
RiskEvaluationDetails.prototype['userBasedRiskBehavior'] = undefined;

/**
 * @member {module:model/RiskEvaluationDetailsUserRiskBehavior} userRiskBehavior
 */
RiskEvaluationDetails.prototype['userRiskBehavior'] = undefined;






export default RiskEvaluationDetails;

