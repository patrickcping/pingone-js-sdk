/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumCompletionStatus from './EnumCompletionStatus';
import EnumEventSharingType from './EnumEventSharingType';
import RiskEvaluationEventBrowser from './RiskEvaluationEventBrowser';
import RiskEvaluationEventEvaluatedFactors from './RiskEvaluationEventEvaluatedFactors';
import RiskEvaluationEventFlow from './RiskEvaluationEventFlow';
import RiskEvaluationEventSession from './RiskEvaluationEventSession';
import RiskEvaluationEventTargetResource from './RiskEvaluationEventTargetResource';
import RiskEvaluationEventUser from './RiskEvaluationEventUser';

/**
 * The RiskEvaluationEvent model module.
 * @module model/RiskEvaluationEvent
 * @version 2023-06-29
 */
class RiskEvaluationEvent {
    /**
     * Constructs a new <code>RiskEvaluationEvent</code>.
     * @alias module:model/RiskEvaluationEvent
     * @param ip {String} A string that specifies the origin IP address of the authentication flow. This is a required property.
     * @param user {module:model/RiskEvaluationEventUser} 
     */
    constructor(ip, user) { 
        
        RiskEvaluationEvent.initialize(this, ip, user);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ip, user) { 
        obj['ip'] = ip;
        obj['user'] = user;
    }

    /**
     * Constructs a <code>RiskEvaluationEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskEvaluationEvent} obj Optional instance to populate.
     * @return {module:model/RiskEvaluationEvent} The populated <code>RiskEvaluationEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskEvaluationEvent();

            if (data.hasOwnProperty('browser')) {
                obj['browser'] = RiskEvaluationEventBrowser.constructFromObject(data['browser']);
            }
            if (data.hasOwnProperty('completionStatus')) {
                obj['completionStatus'] = EnumCompletionStatus.constructFromObject(data['completionStatus']);
            }
            if (data.hasOwnProperty('evaluatedFactors')) {
                obj['evaluatedFactors'] = RiskEvaluationEventEvaluatedFactors.constructFromObject(data['evaluatedFactors']);
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('flow')) {
                obj['flow'] = RiskEvaluationEventFlow.constructFromObject(data['flow']);
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('session')) {
                obj['session'] = RiskEvaluationEventSession.constructFromObject(data['session']);
            }
            if (data.hasOwnProperty('targetResource')) {
                obj['targetResource'] = RiskEvaluationEventTargetResource.constructFromObject(data['targetResource']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = RiskEvaluationEventUser.constructFromObject(data['user']);
            }
            if (data.hasOwnProperty('sharingType')) {
                obj['sharingType'] = EnumEventSharingType.constructFromObject(data['sharingType']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskEvaluationEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskEvaluationEvent</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RiskEvaluationEvent.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `browser`
        if (data['browser']) { // data not null
          RiskEvaluationEventBrowser.validateJSON(data['browser']);
        }
        // validate the optional field `evaluatedFactors`
        if (data['evaluatedFactors']) { // data not null
          RiskEvaluationEventEvaluatedFactors.validateJSON(data['evaluatedFactors']);
        }
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }
        // validate the optional field `flow`
        if (data['flow']) { // data not null
          RiskEvaluationEventFlow.validateJSON(data['flow']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }
        // validate the optional field `session`
        if (data['session']) { // data not null
          RiskEvaluationEventSession.validateJSON(data['session']);
        }
        // validate the optional field `targetResource`
        if (data['targetResource']) { // data not null
          RiskEvaluationEventTargetResource.validateJSON(data['targetResource']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          RiskEvaluationEventUser.validateJSON(data['user']);
        }

        return true;
    }


}

RiskEvaluationEvent.RequiredProperties = ["ip", "user"];

/**
 * @member {module:model/RiskEvaluationEventBrowser} browser
 */
RiskEvaluationEvent.prototype['browser'] = undefined;

/**
 * @member {module:model/EnumCompletionStatus} completionStatus
 */
RiskEvaluationEvent.prototype['completionStatus'] = undefined;

/**
 * @member {module:model/RiskEvaluationEventEvaluatedFactors} evaluatedFactors
 */
RiskEvaluationEvent.prototype['evaluatedFactors'] = undefined;

/**
 * A string that specifies the origin IP address of the authentication flow. This is a required property.
 * @member {String} ip
 */
RiskEvaluationEvent.prototype['ip'] = undefined;

/**
 * @member {module:model/RiskEvaluationEventFlow} flow
 */
RiskEvaluationEvent.prototype['flow'] = undefined;

/**
 * A string that specifies the calling service.
 * @member {String} origin
 */
RiskEvaluationEvent.prototype['origin'] = undefined;

/**
 * @member {module:model/RiskEvaluationEventSession} session
 */
RiskEvaluationEvent.prototype['session'] = undefined;

/**
 * @member {module:model/RiskEvaluationEventTargetResource} targetResource
 */
RiskEvaluationEvent.prototype['targetResource'] = undefined;

/**
 * @member {module:model/RiskEvaluationEventUser} user
 */
RiskEvaluationEvent.prototype['user'] = undefined;

/**
 * @member {module:model/EnumEventSharingType} sharingType
 */
RiskEvaluationEvent.prototype['sharingType'] = undefined;






export default RiskEvaluationEvent;

