/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RiskPredictorCommonDefaultResult from './RiskPredictorCommonDefaultResult';

/**
 * The RiskPredictorCommonDefault model module.
 * @module model/RiskPredictorCommonDefault
 * @version 2023-06-29
 */
class RiskPredictorCommonDefault {
    /**
     * Constructs a new <code>RiskPredictorCommonDefault</code>.
     * Contains the default values used for a new risk predictor.
     * @alias module:model/RiskPredictorCommonDefault
     * @param weight {Number} An integer type. This specifies the weight assigned to the risk predictor in a new policy by default.
     */
    constructor(weight) { 
        
        RiskPredictorCommonDefault.initialize(this, weight);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, weight) { 
        obj['weight'] = weight;
    }

    /**
     * Constructs a <code>RiskPredictorCommonDefault</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskPredictorCommonDefault} obj Optional instance to populate.
     * @return {module:model/RiskPredictorCommonDefault} The populated <code>RiskPredictorCommonDefault</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskPredictorCommonDefault();

            if (data.hasOwnProperty('weight')) {
                obj['weight'] = ApiClient.convertToType(data['weight'], 'Number');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('evaluated')) {
                obj['evaluated'] = ApiClient.convertToType(data['evaluated'], 'Boolean');
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = RiskPredictorCommonDefaultResult.constructFromObject(data['result']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskPredictorCommonDefault</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskPredictorCommonDefault</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RiskPredictorCommonDefault.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `result`
        if (data['result']) { // data not null
          RiskPredictorCommonDefaultResult.validateJSON(data['result']);
        }

        return true;
    }


}

RiskPredictorCommonDefault.RequiredProperties = ["weight"];

/**
 * An integer type. This specifies the weight assigned to the risk predictor in a new policy by default.
 * @member {Number} weight
 */
RiskPredictorCommonDefault.prototype['weight'] = undefined;

/**
 * @member {Number} score
 */
RiskPredictorCommonDefault.prototype['score'] = undefined;

/**
 * @member {Boolean} evaluated
 */
RiskPredictorCommonDefault.prototype['evaluated'] = undefined;

/**
 * @member {module:model/RiskPredictorCommonDefaultResult} result
 */
RiskPredictorCommonDefault.prototype['result'] = undefined;






export default RiskPredictorCommonDefault;

