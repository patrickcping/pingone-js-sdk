/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RiskPredictorCustomItemList model module.
 * @module model/RiskPredictorCustomItemList
 * @version 2023-06-29
 */
class RiskPredictorCustomItemList {
    /**
     * Constructs a new <code>RiskPredictorCustomItemList</code>.
     * The mapping of risk levels for the list of all results.
     * @alias module:model/RiskPredictorCustomItemList
     * @param contains {String} 
     * @param list {Array.<String>} An array that specifies the list of entities that represent the risk conditions.
     */
    constructor(contains, list) { 
        
        RiskPredictorCustomItemList.initialize(this, contains, list);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contains, list) { 
        obj['contains'] = contains;
        obj['list'] = list;
    }

    /**
     * Constructs a <code>RiskPredictorCustomItemList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskPredictorCustomItemList} obj Optional instance to populate.
     * @return {module:model/RiskPredictorCustomItemList} The populated <code>RiskPredictorCustomItemList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskPredictorCustomItemList();

            if (data.hasOwnProperty('contains')) {
                obj['contains'] = ApiClient.convertToType(data['contains'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('list')) {
                obj['list'] = ApiClient.convertToType(data['list'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskPredictorCustomItemList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskPredictorCustomItemList</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RiskPredictorCustomItemList.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['contains'] && !(typeof data['contains'] === 'string' || data['contains'] instanceof String)) {
            throw new Error("Expected the field `contains` to be a primitive type in the JSON string but got " + data['contains']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['list'])) {
            throw new Error("Expected the field `list` to be an array in the JSON data but got " + data['list']);
        }

        return true;
    }


}

RiskPredictorCustomItemList.RequiredProperties = ["contains", "list"];

/**
 * @member {String} contains
 */
RiskPredictorCustomItemList.prototype['contains'] = undefined;

/**
 * @member {String} type
 */
RiskPredictorCustomItemList.prototype['type'] = undefined;

/**
 * An array that specifies the list of entities that represent the risk conditions.
 * @member {Array.<String>} list
 */
RiskPredictorCustomItemList.prototype['list'] = undefined;






export default RiskPredictorCustomItemList;

