/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RiskPolicyConditionBetween model module.
 * @module model/RiskPolicyConditionBetween
 * @version 2023-06-29
 */
class RiskPolicyConditionBetween {
    /**
     * Constructs a new <code>RiskPolicyConditionBetween</code>.
     * @alias module:model/RiskPolicyConditionBetween
     * @param minScore {Number} Required for policies of type `AGGREGATED_SCORES` or `AGGREGATED_WEIGHTS`. The beginning of the risk score range that will be translated into the specified risk level (`MEDIUM` or `HIGH`). Must be between `0` and `1000`.
     * @param maxScore {Number} Required for policies of type `AGGREGATED_SCORES` or `AGGREGATED_WEIGHTS`. The end of the risk score range that will be translated into the specified risk level (`MEDIUM` or `HIGH`). Must be between `0` and `1000`.
     */
    constructor(minScore, maxScore) { 
        
        RiskPolicyConditionBetween.initialize(this, minScore, maxScore);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, minScore, maxScore) { 
        obj['minScore'] = minScore;
        obj['maxScore'] = maxScore;
    }

    /**
     * Constructs a <code>RiskPolicyConditionBetween</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskPolicyConditionBetween} obj Optional instance to populate.
     * @return {module:model/RiskPolicyConditionBetween} The populated <code>RiskPolicyConditionBetween</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskPolicyConditionBetween();

            if (data.hasOwnProperty('minScore')) {
                obj['minScore'] = ApiClient.convertToType(data['minScore'], 'Number');
            }
            if (data.hasOwnProperty('maxScore')) {
                obj['maxScore'] = ApiClient.convertToType(data['maxScore'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskPolicyConditionBetween</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskPolicyConditionBetween</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RiskPolicyConditionBetween.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

RiskPolicyConditionBetween.RequiredProperties = ["minScore", "maxScore"];

/**
 * Required for policies of type `AGGREGATED_SCORES` or `AGGREGATED_WEIGHTS`. The beginning of the risk score range that will be translated into the specified risk level (`MEDIUM` or `HIGH`). Must be between `0` and `1000`.
 * @member {Number} minScore
 */
RiskPolicyConditionBetween.prototype['minScore'] = undefined;

/**
 * Required for policies of type `AGGREGATED_SCORES` or `AGGREGATED_WEIGHTS`. The end of the risk score range that will be translated into the specified risk level (`MEDIUM` or `HIGH`). Must be between `0` and `1000`.
 * @member {Number} maxScore
 */
RiskPolicyConditionBetween.prototype['maxScore'] = undefined;






export default RiskPolicyConditionBetween;

