/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RiskPredictorCustomItemIPRange model module.
 * @module model/RiskPredictorCustomItemIPRange
 * @version 2023-06-29
 */
class RiskPredictorCustomItemIPRange {
    /**
     * Constructs a new <code>RiskPredictorCustomItemIPRange</code>.
     * The mapping of risk levels for the IP ranges specified.
     * @alias module:model/RiskPredictorCustomItemIPRange
     * @param contains {String} 
     * @param ipRange {Array.<String>} List of CIDRs to include
     */
    constructor(contains, ipRange) { 
        
        RiskPredictorCustomItemIPRange.initialize(this, contains, ipRange);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contains, ipRange) { 
        obj['contains'] = contains;
        obj['ipRange'] = ipRange;
    }

    /**
     * Constructs a <code>RiskPredictorCustomItemIPRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskPredictorCustomItemIPRange} obj Optional instance to populate.
     * @return {module:model/RiskPredictorCustomItemIPRange} The populated <code>RiskPredictorCustomItemIPRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskPredictorCustomItemIPRange();

            if (data.hasOwnProperty('contains')) {
                obj['contains'] = ApiClient.convertToType(data['contains'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('ipRange')) {
                obj['ipRange'] = ApiClient.convertToType(data['ipRange'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskPredictorCustomItemIPRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskPredictorCustomItemIPRange</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RiskPredictorCustomItemIPRange.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['contains'] && !(typeof data['contains'] === 'string' || data['contains'] instanceof String)) {
            throw new Error("Expected the field `contains` to be a primitive type in the JSON string but got " + data['contains']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ipRange'])) {
            throw new Error("Expected the field `ipRange` to be an array in the JSON data but got " + data['ipRange']);
        }

        return true;
    }


}

RiskPredictorCustomItemIPRange.RequiredProperties = ["contains", "ipRange"];

/**
 * @member {String} contains
 */
RiskPredictorCustomItemIPRange.prototype['contains'] = undefined;

/**
 * @member {String} type
 */
RiskPredictorCustomItemIPRange.prototype['type'] = undefined;

/**
 * List of CIDRs to include
 * @member {Array.<String>} ipRange
 */
RiskPredictorCustomItemIPRange.prototype['ipRange'] = undefined;






export default RiskPredictorCustomItemIPRange;

