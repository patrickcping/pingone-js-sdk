/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumUserType from './EnumUserType';
import RiskEvaluationEventUserGroupsInner from './RiskEvaluationEventUserGroupsInner';

/**
 * The RiskEvaluationEventUser model module.
 * @module model/RiskEvaluationEventUser
 * @version 2023-06-29
 */
class RiskEvaluationEventUser {
    /**
     * Constructs a new <code>RiskEvaluationEventUser</code>.
     * @alias module:model/RiskEvaluationEventUser
     * @param id {String} A string that specifies the ID of the user associated with the event (maximum size 1024 characters). This is a required property.
     * @param type {module:model/EnumUserType} 
     */
    constructor(id, type) { 
        
        RiskEvaluationEventUser.initialize(this, id, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, type) { 
        obj['id'] = id;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>RiskEvaluationEventUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RiskEvaluationEventUser} obj Optional instance to populate.
     * @return {module:model/RiskEvaluationEventUser} The populated <code>RiskEvaluationEventUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RiskEvaluationEventUser();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = EnumUserType.constructFromObject(data['type']);
            }
            if (data.hasOwnProperty('groups')) {
                obj['groups'] = ApiClient.convertToType(data['groups'], [RiskEvaluationEventUserGroupsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RiskEvaluationEventUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskEvaluationEventUser</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RiskEvaluationEventUser.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['groups']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['groups'])) {
                throw new Error("Expected the field `groups` to be an array in the JSON data but got " + data['groups']);
            }
            // validate the optional field `groups` (array)
            for (const item of data['groups']) {
                RiskEvaluationEventUserGroupsInner.validateJSON(item);
            };
        }

        return true;
    }


}

RiskEvaluationEventUser.RequiredProperties = ["id", "type"];

/**
 * A string that specifies the ID of the user associated with the event (maximum size 1024 characters). This is a required property.
 * @member {String} id
 */
RiskEvaluationEventUser.prototype['id'] = undefined;

/**
 * A string that specifies the name of the user associated with the event (maximum size 1024 characters).
 * @member {String} name
 */
RiskEvaluationEventUser.prototype['name'] = undefined;

/**
 * @member {module:model/EnumUserType} type
 */
RiskEvaluationEventUser.prototype['type'] = undefined;

/**
 * An array of group names.
 * @member {Array.<module:model/RiskEvaluationEventUserGroupsInner>} groups
 */
RiskEvaluationEventUser.prototype['groups'] = undefined;






export default RiskEvaluationEventUser;

