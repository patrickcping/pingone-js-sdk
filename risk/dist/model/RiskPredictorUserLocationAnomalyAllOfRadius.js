/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumDistanceUnit from './EnumDistanceUnit';

/**
 * The RiskPredictorUserLocationAnomalyAllOfRadius model module.
 * @module model/RiskPredictorUserLocationAnomalyAllOfRadius
 * @version 2023-06-29
 */
class RiskPredictorUserLocationAnomalyAllOfRadius {
  /**
   * Constructs a new <code>RiskPredictorUserLocationAnomalyAllOfRadius</code>.
   * @alias module:model/RiskPredictorUserLocationAnomalyAllOfRadius
   * @param distance {Number} A value to apply to the distance radius.  Minimum of 10 miles (16 km) and maximum of 100 miles (160 km)
   * @param unit {module:model/EnumDistanceUnit} 
   */
  constructor(distance, unit) {
    RiskPredictorUserLocationAnomalyAllOfRadius.initialize(this, distance, unit);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, distance, unit) {
    obj['distance'] = distance;
    obj['unit'] = unit;
  }

  /**
   * Constructs a <code>RiskPredictorUserLocationAnomalyAllOfRadius</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RiskPredictorUserLocationAnomalyAllOfRadius} obj Optional instance to populate.
   * @return {module:model/RiskPredictorUserLocationAnomalyAllOfRadius} The populated <code>RiskPredictorUserLocationAnomalyAllOfRadius</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new RiskPredictorUserLocationAnomalyAllOfRadius();
      if (data.hasOwnProperty('distance')) {
        obj['distance'] = ApiClient.convertToType(data['distance'], 'Number');
      }
      if (data.hasOwnProperty('unit')) {
        obj['unit'] = EnumDistanceUnit.constructFromObject(data['unit']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>RiskPredictorUserLocationAnomalyAllOfRadius</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskPredictorUserLocationAnomalyAllOfRadius</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of RiskPredictorUserLocationAnomalyAllOfRadius.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    return true;
  }
}
RiskPredictorUserLocationAnomalyAllOfRadius.RequiredProperties = ["distance", "unit"];

/**
 * A value to apply to the distance radius.  Minimum of 10 miles (16 km) and maximum of 100 miles (160 km)
 * @member {Number} distance
 */
RiskPredictorUserLocationAnomalyAllOfRadius.prototype['distance'] = undefined;

/**
 * @member {module:model/EnumDistanceUnit} unit
 */
RiskPredictorUserLocationAnomalyAllOfRadius.prototype['unit'] = undefined;
export default RiskPredictorUserLocationAnomalyAllOfRadius;