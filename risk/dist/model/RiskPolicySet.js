/**
 * PingOne Platform API - PingOne Risk
 * The PingOne Platform API covering the PingOne Risk service
 *
 * The version of the OpenAPI document: 2023-06-29
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinksHATEOAS from './LinksHATEOAS';
import ObjectEnvironment from './ObjectEnvironment';
import RiskPolicy from './RiskPolicy';
import RiskPolicySetDefaultResult from './RiskPolicySetDefaultResult';
import RiskPolicySetEvaluatedPredictorsInner from './RiskPolicySetEvaluatedPredictorsInner';
import RiskPolicySetTriggersInner from './RiskPolicySetTriggersInner';

/**
 * The RiskPolicySet model module.
 * @module model/RiskPolicySet
 * @version 2023-06-29
 */
class RiskPolicySet {
  /**
   * Constructs a new <code>RiskPolicySet</code>.
   * @alias module:model/RiskPolicySet
   * @param name {String} A string that specifies a name for this policy set. Valid characters consist of any Unicode letter, mark (for example, accent, umlaut), numeric character, forward slash, dot, apostrophe, underscore, space, or hyphen. Maximum size is 256 characters.
   */
  constructor(name) {
    RiskPolicySet.initialize(this, name);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, name) {
    obj['name'] = name;
  }

  /**
   * Constructs a <code>RiskPolicySet</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/RiskPolicySet} obj Optional instance to populate.
   * @return {module:model/RiskPolicySet} The populated <code>RiskPolicySet</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new RiskPolicySet();
      if (data.hasOwnProperty('_links')) {
        obj['_links'] = LinksHATEOAS.constructFromObject(data['_links']);
      }
      if (data.hasOwnProperty('createdAt')) {
        obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
      }
      if (data.hasOwnProperty('default')) {
        obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
      }
      if (data.hasOwnProperty('defaultResult')) {
        obj['defaultResult'] = RiskPolicySetDefaultResult.constructFromObject(data['defaultResult']);
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('environment')) {
        obj['environment'] = ObjectEnvironment.constructFromObject(data['environment']);
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('riskPolicies')) {
        obj['riskPolicies'] = ApiClient.convertToType(data['riskPolicies'], [RiskPolicy]);
      }
      if (data.hasOwnProperty('updatedAt')) {
        obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'Date');
      }
      if (data.hasOwnProperty('evaluatedPredictors')) {
        obj['evaluatedPredictors'] = ApiClient.convertToType(data['evaluatedPredictors'], [RiskPolicySetEvaluatedPredictorsInner]);
      }
      if (data.hasOwnProperty('triggers')) {
        obj['triggers'] = ApiClient.convertToType(data['triggers'], [RiskPolicySetTriggersInner]);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>RiskPolicySet</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RiskPolicySet</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of RiskPolicySet.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // validate the optional field `defaultResult`
    if (data['defaultResult']) {
      // data not null
      RiskPolicySetDefaultResult.validateJSON(data['defaultResult']);
    }
    // ensure the json data is a string
    if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
      throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
    }
    // validate the optional field `environment`
    if (data['environment']) {
      // data not null
      ObjectEnvironment.validateJSON(data['environment']);
    }
    // ensure the json data is a string
    if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
      throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
    }
    // ensure the json data is a string
    if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
      throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
    }
    if (data['riskPolicies']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['riskPolicies'])) {
        throw new Error("Expected the field `riskPolicies` to be an array in the JSON data but got " + data['riskPolicies']);
      }
      // validate the optional field `riskPolicies` (array)
      for (const item of data['riskPolicies']) {
        RiskPolicy.validateJSON(item);
      }
      ;
    }
    if (data['evaluatedPredictors']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['evaluatedPredictors'])) {
        throw new Error("Expected the field `evaluatedPredictors` to be an array in the JSON data but got " + data['evaluatedPredictors']);
      }
      // validate the optional field `evaluatedPredictors` (array)
      for (const item of data['evaluatedPredictors']) {
        RiskPolicySetEvaluatedPredictorsInner.validateJSON(item);
      }
      ;
    }
    if (data['triggers']) {
      // data not null
      // ensure the json data is an array
      if (!Array.isArray(data['triggers'])) {
        throw new Error("Expected the field `triggers` to be an array in the JSON data but got " + data['triggers']);
      }
      // validate the optional field `triggers` (array)
      for (const item of data['triggers']) {
        RiskPolicySetTriggersInner.validateJSON(item);
      }
      ;
    }
    return true;
  }
}
RiskPolicySet.RequiredProperties = ["name"];

/**
 * @member {module:model/LinksHATEOAS} _links
 */
RiskPolicySet.prototype['_links'] = undefined;

/**
 * The time the resource was created (format ISO-8061).
 * @member {Date} createdAt
 */
RiskPolicySet.prototype['createdAt'] = undefined;

/**
 * A boolean that specifies whether this risk policy set is the environment's default risk policy set, which is used whenever an explicit policySet ID is not specified in the risk policy evaluation request. If this property is not specified, the value defaults to false, and this risk policy set is not regarded as the default risk policy set for the environment. When this property is set to true (in PUT or POST requests), the default property of all other risk policy sets in the environment is set to false.
 * @member {Boolean} default
 */
RiskPolicySet.prototype['default'] = undefined;

/**
 * @member {module:model/RiskPolicySetDefaultResult} defaultResult
 */
RiskPolicySet.prototype['defaultResult'] = undefined;

/**
 * A string that specifies a description for this policy set. This is an optional property. Valid characters consist of any Unicode letter, mark (for example, accent, umlaut), numeric character, punctuation character, or space. Maximum size is 1024 characters.
 * @member {String} description
 */
RiskPolicySet.prototype['description'] = undefined;

/**
 * @member {module:model/ObjectEnvironment} environment
 */
RiskPolicySet.prototype['environment'] = undefined;

/**
 * A string that specifies the resourceâ€™s unique identifier.
 * @member {String} id
 */
RiskPolicySet.prototype['id'] = undefined;

/**
 * A string that specifies a name for this policy set. Valid characters consist of any Unicode letter, mark (for example, accent, umlaut), numeric character, forward slash, dot, apostrophe, underscore, space, or hyphen. Maximum size is 256 characters.
 * @member {String} name
 */
RiskPolicySet.prototype['name'] = undefined;

/**
 * An array of policies related to this policy set.
 * @member {Array.<module:model/RiskPolicy>} riskPolicies
 */
RiskPolicySet.prototype['riskPolicies'] = undefined;

/**
 * The time the resource was last updated (format ISO-8061).
 * @member {Date} updatedAt
 */
RiskPolicySet.prototype['updatedAt'] = undefined;

/**
 * The IDs for the predictors to evaluate in this policy set. In POST and PUT requests, if this property is null, all of the licensed predictors are used.
 * @member {Array.<module:model/RiskPolicySetEvaluatedPredictorsInner>} evaluatedPredictors
 */
RiskPolicySet.prototype['evaluatedPredictors'] = undefined;

/**
 * An array of triggers related to this policy set.
 * @member {Array.<module:model/RiskPolicySetTriggersInner>} triggers
 */
RiskPolicySet.prototype['triggers'] = undefined;
export default RiskPolicySet;