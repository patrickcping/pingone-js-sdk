/**
 * PingOne Platform API - PingOne Verify
 * The PingOne Platform API covering the PingOne Verify service
 *
 * The version of the OpenAPI document: 2023-07-20
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnumVerify from './EnumVerify';
import OTPDeviceConfigurationOtp from './OTPDeviceConfigurationOtp';

/**
 * The OTPDeviceConfiguration model module.
 * @module model/OTPDeviceConfiguration
 * @version 2023-07-20
 */
class OTPDeviceConfiguration {
  /**
   * Constructs a new <code>OTPDeviceConfiguration</code>.
   * @alias module:model/OTPDeviceConfiguration
   * @param verify {module:model/EnumVerify} 
   */
  constructor(verify) {
    OTPDeviceConfiguration.initialize(this, verify);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  static initialize(obj, verify) {
    obj['verify'] = verify;
  }

  /**
   * Constructs a <code>OTPDeviceConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/OTPDeviceConfiguration} obj Optional instance to populate.
   * @return {module:model/OTPDeviceConfiguration} The populated <code>OTPDeviceConfiguration</code> instance.
   */
  static constructFromObject(data, obj) {
    if (data) {
      obj = obj || new OTPDeviceConfiguration();
      if (data.hasOwnProperty('verify')) {
        obj['verify'] = EnumVerify.constructFromObject(data['verify']);
      }
      if (data.hasOwnProperty('createMfaDevice')) {
        obj['createMfaDevice'] = ApiClient.convertToType(data['createMfaDevice'], 'Boolean');
      }
      if (data.hasOwnProperty('otp')) {
        obj['otp'] = OTPDeviceConfigurationOtp.constructFromObject(data['otp']);
      }
    }
    return obj;
  }

  /**
   * Validates the JSON data with respect to <code>OTPDeviceConfiguration</code>.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OTPDeviceConfiguration</code>.
   */
  static validateJSON(data) {
    // check to make sure all required properties are present in the JSON string
    for (const property of OTPDeviceConfiguration.RequiredProperties) {
      if (!data.hasOwnProperty(property)) {
        throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
      }
    }
    // validate the optional field `otp`
    if (data['otp']) {
      // data not null
      OTPDeviceConfigurationOtp.validateJSON(data['otp']);
    }
    return true;
  }
}
OTPDeviceConfiguration.RequiredProperties = ["verify"];

/**
 * @member {module:model/EnumVerify} verify
 */
OTPDeviceConfiguration.prototype['verify'] = undefined;

/**
 * When enabled, PingOne Verify registers the email address or phone number with PingOne MFA as a verified MFA device.
 * @member {Boolean} createMfaDevice
 */
OTPDeviceConfiguration.prototype['createMfaDevice'] = undefined;

/**
 * @member {module:model/OTPDeviceConfigurationOtp} otp
 */
OTPDeviceConfiguration.prototype['otp'] = undefined;
export default OTPDeviceConfiguration;